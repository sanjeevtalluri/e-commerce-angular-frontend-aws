{"version":3,"sources":["./src/app/buy-product/buy-product.component.ts","./src/app/buy-product/buy-product.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/buy-product-resolver.service.ts","./src/app/show-product-images-dialog/show-product-images-dialog.component.ts","./src/app/show-product-images-dialog/show-product-images-dialog.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/product-resolve.service.ts","./src/app/show-product-details/show-product-details.component.ts","./src/app/show-product-details/show-product-details.component.html","./src/app/add-new-product/add-new-product.component.ts","./src/app/add-new-product/add-new-product.component.html","./src/app/order-details/order-details.component.ts","./src/app/order-details/order-details.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/_auth/auth.guard.ts","./src/app/_services/user.service.ts","./src/app/app.module.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/drag.directive.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/_services/user-auth.service.ts","./src/app/order-confirmation/order-confirmation.component.ts","./src/app/order-confirmation/order-confirmation.component.html","./src/app/product-view-details/product-view-details.component.ts","./src/app/product-view-details/product-view-details.component.html","./src/app/forbidden/forbidden.component.ts","./src/app/forbidden/forbidden.component.html","./src/app/my-orders/my-orders.component.ts","./src/app/my-orders/my-orders.component.html","./src/app/_services/product.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/image-processing.service.ts","./src/main.ts","./src/app/_auth/auth.interceptor.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, Injector, NgZone, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n// import * as Razorpay from 'razorpay';\r\nimport { OrderDetails } from '../_model/order-details.model';\r\nimport { Product } from '../_model/product.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\ndeclare var Razorpay: any;\r\n@Component({\r\n  selector: 'app-buy-product',\r\n  templateUrl: './buy-product.component.html',\r\n  styleUrls: ['./buy-product.component.css']\r\n})\r\nexport class BuyProductComponent implements OnInit {\r\n\r\n  isSingleProductCheckout: string = '';\r\n  productDetails: Product[] = [] ;\r\n\r\n  orderDetails: OrderDetails = {\r\n    fullName: '',\r\n    fullAddress: '',\r\n    contactNumber: '',\r\n    alternateContactNumber: '',\r\n    transactionId: '',\r\n    orderProductQuantityList: []\r\n  }\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n    private productService: ProductService,\r\n    private router: Router,\r\n    private injector: Injector) { }\r\n\r\n  ngOnInit(): void {\r\n    this.productDetails = this.activatedRoute.snapshot.data['productDetails'];\r\n    this.isSingleProductCheckout = this.activatedRoute.snapshot.paramMap.get(\"isSingleProductCheckout\");\r\n    \r\n    this.productDetails.forEach(\r\n      x => this.orderDetails.orderProductQuantityList.push(\r\n        {productId: x.productId, quantity: 1}\r\n      )\r\n    );\r\n\r\n    console.log(this.productDetails)\r\n    console.log(this.orderDetails);\r\n  }\r\n\r\n  public placeOrder(orderForm: NgForm) {\r\n    this.productService.placeOrder(this.orderDetails, this.isSingleProductCheckout).subscribe(\r\n      (resp) => {\r\n        console.log(resp);\r\n        orderForm.reset();\r\n\r\n        const ngZone = this.injector.get(NgZone);\r\n        ngZone.run(\r\n          () => {\r\n            this.router.navigate([\"/orderConfirm\"]);\r\n          }\r\n        );\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getQuantityForProduct(productId) {\r\n    const filteredProduct = this.orderDetails.orderProductQuantityList.filter(\r\n      (productQuantity) => productQuantity.productId === productId\r\n    );\r\n\r\n    return filteredProduct[0].quantity;\r\n  }\r\n\r\n  getCalculatedTotal(productId, productDiscountedPrice) {\r\n    const filteredProduct = this.orderDetails.orderProductQuantityList.filter(\r\n      (productQuantity) => productQuantity.productId === productId\r\n    );\r\n\r\n    return filteredProduct[0].quantity * productDiscountedPrice;\r\n  }\r\n\r\n  onQuantityChanged(q, productId) {\r\n    this.orderDetails.orderProductQuantityList.filter(\r\n      (orderProduct) => orderProduct.productId === productId\r\n    )[0].quantity = q;\r\n  }\r\n\r\n  getCalculatedGrandTotal() {\r\n    let grandTotal = 0;\r\n\r\n    this.orderDetails.orderProductQuantityList.forEach(\r\n      (productQuantity) => {\r\n        const price = this.productDetails.filter(product => product.productId === productQuantity.productId)[0].productDiscountedPrice;\r\n        grandTotal = grandTotal + price * productQuantity.quantity;\r\n      }\r\n    );\r\n\r\n    return grandTotal;\r\n  }\r\n\r\n  createTransactionAndPlaceOrder(orderForm: NgForm) {\r\n    let amount = this.getCalculatedGrandTotal();\r\n    this.productService.createTransaction(amount).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.openTransactioModal(response, orderForm);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  openTransactioModal(response: any, orderForm: NgForm) {\r\n    var options = {\r\n      order_id: response.orderId,\r\n      key: response.key,\r\n      amount: response.amount,\r\n      currency: response.currency,\r\n      name: 'Learn programming yourself',\r\n      description: 'Payment of online shopping',\r\n      image: 'https://cdn.pixabay.com/photo/2023/01/22/13/46/swans-7736415_640.jpg',\r\n      handler: (response: any) => {\r\n        if(response!= null && response.razorpay_payment_id != null) {\r\n          this.processResponse(response, orderForm);\r\n        } else {\r\n          alert(\"Payment failed..\")\r\n        }\r\n       \r\n      },\r\n      prefill : {\r\n        name:'LPY',\r\n        email: 'LPY@GMAIL.COM',\r\n        contact: '90909090'\r\n      },\r\n      notes: {\r\n        address: 'Online Shopping'\r\n      },\r\n      theme: {\r\n        color: '#F37254'\r\n      }\r\n    };\r\n\r\n    var razorPayObject = new Razorpay(options);\r\n    razorPayObject.open();\r\n  }\r\n\r\n  processResponse(resp: any, orderForm:NgForm) {\r\n    this.orderDetails.transactionId = resp.razorpay_payment_id;\r\n    this.placeOrder(orderForm);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card p-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6\">\r\n\r\n                <form #orderForm=\"ngForm\"\r\n                      (ngSubmit)=\"createTransactionAndPlaceOrder(orderForm)\">\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Full name</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Full name\"\r\n                               [(ngModel)]=\"orderDetails.fullName\"\r\n                               name=\"fullName\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Full address</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Full address\"\r\n                               [(ngModel)]=\"orderDetails.fullAddress\"\r\n                               name=\"fullAddress\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Contact number</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Contact number\"\r\n                               [(ngModel)]=\"orderDetails.contactNumber\"\r\n                               name=\"contactNumber\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Alternate contact number</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Alternate contact number\"\r\n                               [(ngModel)]=\"orderDetails.alternateContactNumber\"\r\n                               name=\"alternateContactNumber\">\r\n                    </mat-form-field>\r\n\r\n                    <div align=\"right\">\r\n                        <button type=\"submit\" mat-stroked-button color=\"primary\">Place Order</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead\">\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Amount</th>\r\n                            <th>Quantity</th>\r\n                            <th>Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody class=\"tbody\">\r\n                        <tr *ngFor=\"let product of productDetails\">\r\n                            <td>{{product.productName}}</td>\r\n                            <td>{{product.productDiscountedPrice}}</td>\r\n                            <td>\r\n                                <select \r\n                                #quantity\r\n                                class=\"form-select\"\r\n                                [ngModel]=\"getQuantityForProduct(product.productId)\"\r\n                                (change)=\"onQuantityChanged(quantity.value, product.productId)\"\r\n                                >\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                {{getCalculatedTotal(product.productId, product.productDiscountedPrice)}}\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td>Total</td>\r\n                            <td> {{getCalculatedGrandTotal()}} </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register(registerForm: NgForm) {\r\n    console.log(registerForm.value);\r\n    this.userService.register(registerForm.value).subscribe(\r\n      (response) => {\r\n        this.router.navigate(['/login']);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card\" style=\"padding: 20px;\">\r\n        <form #registerForm=\"ngForm\" (ngSubmit)=\"register(registerForm)\">\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Username</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userName\"\r\n                       id=\"userName\"\r\n                       placeholder=\"Username\">\r\n                <mat-hint>Username</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Firstname</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userFirstName\"\r\n                       id=\"userFirstName\"\r\n                       placeholder=\"Firstname\">\r\n                <mat-hint>Firstname</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Lastname</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userLastName\"\r\n                       id=\"userLastName\"\r\n                       placeholder=\"Lastname\">\r\n                <mat-hint>Lastname</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Password</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userPassword\"\r\n                       id=\"userPassword\"\r\n                       placeholder=\"Password\">\r\n                <mat-hint>Password</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <div class=\"text-center\">\r\n                <button type=\"submit\" mat-raised-button color=\"primary\">Register</button>\r\n            </div>\r\n            \r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  message;\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forUser();\r\n  }\r\n\r\n  forUser() {\r\n    this.userService.forUser().subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.message = response;\r\n      }, \r\n      (error)=>{\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card text-center\" style=\"padding: 20px; color: red;\">\r\n        <h1>You are User</h1>\r\n        <h1>{{message}}</h1>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImageProcessingService } from './image-processing.service';\r\nimport { Product } from './_model/product.model';\r\nimport { ProductService } from './_services/product.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BuyProductResolverService implements Resolve<Product[]>{\r\n\r\n  // let isSingleProductCheckout = false;\r\n\r\n  constructor(private productServcice: ProductService,\r\n    private imageProcessingService: ImageProcessingService) { \r\n\r\n    }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Product[] | Observable<Product[]> | Promise<Product[]> {\r\n    \r\n    const id = route.paramMap.get(\"id\");\r\n    const isSingleProductCheckout = route.paramMap.get(\"isSingleProductCheckout\");\r\n    return this.productServcice.getProductDetails(isSingleProductCheckout, id)\r\n      .pipe(\r\n        map(\r\n          (x: Product[], i) => x.map((product: Product) => this.imageProcessingService.createImages(product))\r\n        )\r\n      );\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { FileHandle } from '../_model/file-handle.model';\r\n\r\n@Component({\r\n  selector: 'app-show-product-images-dialog',\r\n  templateUrl: './show-product-images-dialog.component.html',\r\n  styleUrls: ['./show-product-images-dialog.component.css']\r\n})\r\nexport class ShowProductImagesDialogComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.receiveImages();\r\n  }\r\n\r\n  receiveImages() {\r\n    console.log(this.data);\r\n  }\r\n\r\n}\r\n","<mat-grid-list cols=\"4\" rowHeight=\"1:1\">\r\n    <mat-grid-tile *ngFor=\"let fileHandle of data.images\">\r\n        <img [src]=\"fileHandle.url\" width=\"150px\" height=\"150px\">\r\n    </mat-grid-tile>\r\n</mat-grid-list>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImageProcessingService } from '../image-processing.service';\r\nimport { Product } from '../_model/product.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  pageNumber: number = 0;\r\n\r\n  productDetails = [];\r\n\r\n  showLoadButton = false;\r\n\r\n  constructor(private productService: ProductService,\r\n    private imageProcessingService: ImageProcessingService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllProducts();\r\n  }\r\n\r\n  searchByKeyword(searchkeyword) {\r\n    console.log(searchkeyword);\r\n    this.pageNumber = 0;\r\n    this.productDetails = [];\r\n    this.getAllProducts(searchkeyword);\r\n  }\r\n\r\n  public getAllProducts(searchKey: string = \"\") {\r\n    this.productService.getAllProducts(this.pageNumber, searchKey)\r\n    .pipe(\r\n      map((x: Product[], i) => x.map((product: Product) => this.imageProcessingService.createImages(product)))\r\n    )\r\n    .subscribe(\r\n      (resp: Product[]) => {\r\n        console.log(resp);\r\n        if(resp.length == 12) {\r\n          this.showLoadButton = true;\r\n        } else {\r\n          this.showLoadButton = false;\r\n        }\r\n        resp.forEach(p => this.productDetails.push(p));\r\n      }, (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public loadMoreProduct() {\r\n    this.pageNumber = this.pageNumber + 1;\r\n    this.getAllProducts();\r\n  }\r\n\r\n  showProductDetails(productId) {\r\n    this.router.navigate(['/productViewDetails', {productId: productId}]);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n\r\n   <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n      <mat-label>Search any product</mat-label>\r\n      <input matInput\r\n             #searchkeyword\r\n             (keyup)=\"searchByKeyword(searchkeyword.value)\"\r\n             name=\"searchKey\"\r\n             id=\"searchKey\"\r\n             placeholder=\"Search any product\">\r\n      <mat-hint>Search any product</mat-hint>\r\n  </mat-form-field>\r\n\r\n   <mat-grid-list cols=\"4\" rowHeight=\"3:5\" gutterSize=\"10\">\r\n      <mat-grid-tile *ngFor=\"let p of productDetails\">\r\n         <div class=\"row p-5\">\r\n            <div class=\"image-container\">\r\n               <img class=\"home-page-product-image\" [src]=\"p.productImages[0].url\" alt=\"\">\r\n            </div>\r\n            <div class=\"mt-3\">\r\n               <p><b>{{p.productName}}</b></p>\r\n            </div>\r\n            <div class=\"mt-2\">\r\n               <p style=\"white-space: inherit; height: 40px; width: 288px; overflow: hidden; text-overflow: ellipsis;\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos sed eaque molestias iste repudiandae in quos distinctio rem excepturi expedita incidunt, doloremque id sequi perferendis ipsum. Maxime ad iste eius.</p>\r\n            </div>\r\n            <div class=\"mt-2\">\r\n              <b>Rs. {{p.productDiscountedPrice}}</b> &nbsp;  <b style=\"text-decoration: line-through;\">{{p.productActualPrice}}</b>\r\n            </div>\r\n            <div class=\"mt-2\">\r\n               <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"showProductDetails(p.productId)\">View Details</button>\r\n            </div>\r\n         </div>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <div class=\"text-center mt-5\" style=\"padding-bottom: 100px;\" *ngIf=\"showLoadButton\">\r\n      <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"loadMoreProduct()\"> Load more</button>\r\n    </div>\r\n\r\n    <div class=\"mt-5\" >\r\n         \r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Product } from './_model/product.model';\r\nimport { ProductService } from './_services/product.service';\r\nimport { ImageProcessingService } from './image-processing.service'\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ProductResolveService implements Resolve<Product> {\r\n  constructor(private productService: ProductService,\r\n    private imageProcessingService: ImageProcessingService) {}\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<Product> {\r\n    const id = route.paramMap.get(\"productId\");\r\n\r\n    if (id) {\r\n      //then we have to fetch details from backend\r\n       return this.productService.getProductDetailsById(id)\r\n              .pipe(\r\n                map(p => this.imageProcessingService.createImages(p))\r\n              );\r\n    } else {\r\n      // return empty product observable.\r\n      return of(this.getProductDetails());\r\n    }\r\n  }\r\n\r\n  getProductDetails() {\r\n    return {\r\n      productId:null,\r\n      productName: \"\",\r\n      productDescription: \"\",\r\n      productDiscountedPrice: 0,\r\n      productActualPrice: 0,\r\n      productImages: [],\r\n    };\r\n  }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImageProcessingService } from '../image-processing.service';\r\nimport { ShowProductImagesDialogComponent } from '../show-product-images-dialog/show-product-images-dialog.component';\r\nimport { Product } from '../_model/product.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-show-product-details',\r\n  templateUrl: './show-product-details.component.html',\r\n  styleUrls: ['./show-product-details.component.css']\r\n})\r\nexport class ShowProductDetailsComponent implements OnInit {\r\n\r\n  showLoadMoreProductButton = false;\r\n  showTable = false;\r\n  pageNumber: number = 0;\r\n  productDetails: Product[] = [];\r\n  displayedColumns: string[] = ['Id', 'Product Name', 'description', 'Product Discounted Price', 'Product Actual Price', 'Actions'];\r\n\r\n  constructor(private productService: ProductService,\r\n    public imagesDialog: MatDialog,\r\n    private imageProcessingService: ImageProcessingService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllProducts();\r\n  }\r\n\r\n  searchByKeyword(searchkeyword) {\r\n    console.log(searchkeyword);\r\n    this.pageNumber = 0;\r\n    this.productDetails = [];\r\n    this.getAllProducts(searchkeyword);\r\n  }\r\n\r\n  public getAllProducts(searchKeyword: string = \"\") {\r\n    this.showTable = false;\r\n    this.productService.getAllProducts(this.pageNumber, searchKeyword)\r\n    .pipe(\r\n      map((x: Product[], i) => x.map((product: Product) => this.imageProcessingService.createImages(product)))\r\n    )\r\n    .subscribe(\r\n      (resp: Product[]) => {\r\n        // console.log(resp);\r\n        resp.forEach(product => this.productDetails.push(product));\r\n        console.log('msg', this.productDetails);\r\n        this.showTable = true;\r\n\r\n        if(resp.length == 12) {\r\n          this.showLoadMoreProductButton = true;\r\n        } else {\r\n          this.showLoadMoreProductButton = false;\r\n        }\r\n\r\n        // this.productDetails = resp;\r\n      }, (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  loadMoreProduct() {\r\n    this.pageNumber = this.pageNumber + 1;\r\n    this.getAllProducts();\r\n  }\r\n\r\n  deleteProduct(productId) {\r\n    this.productService.deleteProduct(productId).subscribe(\r\n      (resp) => {\r\n        this.getAllProducts();\r\n      },\r\n      (error:HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  showImages(product: Product) {\r\n    console.log(product);\r\n    this.imagesDialog.open(ShowProductImagesDialogComponent, {\r\n      data: {\r\n        images: product.productImages\r\n      },\r\n      height: '500px',\r\n      width: '800px'\r\n    });\r\n  }\r\n\r\n  editProductDetails(productId) {\r\n    this.router.navigate(['/addNewProduct', {productId: productId}]);\r\n  }\r\n}\r\n","<div class=\"mt-5 p-3\">\r\n\r\n  <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n    <mat-label>Search any product</mat-label>\r\n    <input matInput\r\n           #searchkeyword\r\n           (keyup)=\"searchByKeyword(searchkeyword.value)\"\r\n           name=\"searchKey\"\r\n           id=\"searchKey\"\r\n           placeholder=\"Search any product\">\r\n    <mat-hint>Search any product</mat-hint>\r\n</mat-form-field>\r\n \r\n<div *ngIf=\"showTable\">\r\n\r\n\r\n<table mat-table [dataSource]=\"productDetails\" class=\"mat-elevation-z8\">\r\n  \r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"Id\">\r\n      <th mat-header-cell *matHeaderCellDef> Id </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.productId}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Product Name\">\r\n      <th mat-header-cell *matHeaderCellDef> Product Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.productName}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"description\">\r\n      <th mat-header-cell *matHeaderCellDef> Product Description </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.productDescription}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"Product Discounted Price\">\r\n      <th mat-header-cell *matHeaderCellDef> Product Discounted Price </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.productDiscountedPrice}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Product Actual Price\">\r\n        <th mat-header-cell *matHeaderCellDef> Product Actual Price </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.productActualPrice}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Actions\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <button mat-icon-button color=\"primary\" (click)=\"showImages(element)\">\r\n          <mat-icon> images </mat-icon>\r\n        </button>    \r\n        <button mat-icon-button color=\"primary\" (click)=\"editProductDetails(element.productId)\">\r\n          <mat-icon> edit </mat-icon>\r\n        </button>\r\n        <button mat-icon-button color=\"warn\" (click)=\"deleteProduct(element.productId)\">\r\n          <mat-icon> delete </mat-icon>\r\n        </button> \r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n</div>\r\n\r\n<div class=\"text-center p-5\" *ngIf=\"showLoadMoreProductButton\">\r\n  <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"loadMoreProduct()\">Load more</button>\r\n</div>\r\n\r\n</div>\r\n","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FileHandle } from \"../_model/file-handle.model\";\r\nimport { Product } from \"../_model/product.model\";\r\nimport { ProductService } from \"../_services/product.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-new-product\",\r\n  templateUrl: \"./add-new-product.component.html\",\r\n  styleUrls: [\"./add-new-product.component.css\"],\r\n})\r\nexport class AddNewProductComponent implements OnInit {\r\n  isNewProduct = true;\r\n\r\n  product: Product = {\r\n    productId: null,\r\n    productName: \"\",\r\n    productDescription: \"\",\r\n    productDiscountedPrice: 0,\r\n    productActualPrice: 0,\r\n    productImages: [],\r\n  };\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private sanitizer: DomSanitizer,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.product = this.activatedRoute.snapshot.data['product'];\r\n\r\n    if(this.product && this.product.productId) {\r\n      this.isNewProduct = false;\r\n    }\r\n  }\r\n\r\n  addProduct(productForm: NgForm) {\r\n    const formData = this.prepareFormDataForProduct(this.product);\r\n    this.productService.addProduct(formData).subscribe(\r\n      (response: Product) => {\r\n        productForm.reset();\r\n        this.product.productImages = [];\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  prepareFormDataForProduct(product: Product): FormData {\r\n    const uploadImageData = new FormData();\r\n    uploadImageData.append(\r\n      \"product\",\r\n      new Blob([JSON.stringify(product)], { type: \"application/json\" })\r\n    );\r\n\r\n    for (var i = 0; i < this.product.productImages.length; i++) {\r\n      uploadImageData.append(\r\n        \"imageFile\",\r\n        this.product.productImages[i].file,\r\n        this.product.productImages[i].file.name\r\n      );\r\n    }\r\n    return uploadImageData;\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    if (event.target.files) {\r\n      const file = event.target.files[0];\r\n      const fileHandle: FileHandle = {\r\n        file: file,\r\n        url: this.sanitizer.bypassSecurityTrustUrl(\r\n          window.URL.createObjectURL(file)\r\n        ),\r\n      };\r\n      this.product.productImages.push(fileHandle);\r\n    }\r\n  }\r\n\r\n  removeImages(i: number) {\r\n    this.product.productImages.splice(i, 1);\r\n  }\r\n\r\n  fileDropped(fileHandle: FileHandle) {\r\n    this.product.productImages.push(fileHandle);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card p-2\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-6\">\r\n\r\n                <form #productForm=\"ngForm\"\r\n                      (ngSubmit)=\"addProduct(productForm)\">\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Product Name</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Product Name\"\r\n                               [(ngModel)]=\"product.productName\"\r\n                               name=\"productName\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Product Description</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Product Description\"\r\n                               [(ngModel)]=\"product.productDescription\"\r\n                               name=\"productDescription\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Product Actual Price</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Product Actual Price\"\r\n                               [(ngModel)]=\"product.productActualPrice\"\r\n                               name=\"productActualPrice\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Product Discounted Price</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Product Discounted Price\"\r\n                               [(ngModel)]=\"product.productDiscountedPrice\"\r\n                               name=\"productDiscountedPrice\">\r\n                    </mat-form-field>\r\n\r\n                    <div align=\"end\">\r\n                        <button mat-stroked-button\r\n                                color=\"primary\"\r\n                                style=\"margin-right: 3px;\">Clear</button>\r\n                        <button type=\"submit\" *ngIf=\"isNewProduct\"\r\n                                mat-stroked-button\r\n                                color=\"primary\">Add Product</button>\r\n                        <button type=\"submit\" *ngIf=\"!isNewProduct\"\r\n                                mat-stroked-button\r\n                                color=\"primary\">Update Product</button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div>\r\n                    <div class=\"dropzone\"\r\n                         appDrag\r\n                         (files)=\"fileDropped($event)\">\r\n                        <div class=\"text-wrapper\">\r\n                            <div class=\"centered\">\r\n                                Drag and drop your file or\r\n                                <a (click)=\"selectFile.click()\"\r\n                                   class=\"browse-button\">browse</a>\r\n                                a file\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <input multiple\r\n                           type=\"file\"\r\n                           style=\"display: none;\"\r\n                           #selectFile\r\n                           value=\"select\"\r\n                           (change)=\"onFileSelected($event)\">\r\n                </div>\r\n                <div class=\"mt-5\">\r\n                    <div class=\"row\">\r\n                        <mat-grid-list cols=\"4\"\r\n                                       rowHeight=\"1:1\">\r\n                            <mat-grid-tile *ngFor=\"let file of product.productImages; let i = index;\">\r\n                                <div style=\"position: relative\">\r\n                                    <span class=\"btn-remove-image\"\r\n                                          (click)=\"removeImages(i)\">x</span>\r\n                                    <img [src]=\"file.url\"\r\n                                         width=\"100px\"\r\n                                         height=\"100px\">\r\n                                </div>\r\n                            </mat-grid-tile>\r\n                        </mat-grid-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-order-details',\r\n  templateUrl: './order-details.component.html',\r\n  styleUrls: ['./order-details.component.css']\r\n})\r\nexport class OrderDetailsComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['Id', 'Product Name', 'Name', 'Address', 'Contact No.', 'Status', 'Action'];\r\n  dataSource = [];\r\n\r\n  status: string = 'All';\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllOrderDetailsForAdmin(this.status);\r\n  }\r\n\r\n  getAllOrderDetailsForAdmin(statusParameter: string) {\r\n    this.productService.getAllOrderDetailsForAdmin(statusParameter).subscribe(\r\n      (resp) => {\r\n        this.dataSource = resp;\r\n        console.log(resp);\r\n      }, (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  markAsDelivered(orderId) {\r\n    console.log(orderId);\r\n    this.productService.markAsDelivered(orderId).subscribe(\r\n      (response) => {\r\n        this.getAllOrderDetailsForAdmin(this.status);\r\n        console.log(response);\r\n      }, (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n  <mat-button-toggle-group  aria-label=\"Font Style\">\r\n    <mat-button-toggle value=\"All\" (click)=\"getAllOrderDetailsForAdmin('All')\">All</mat-button-toggle>\r\n    <mat-button-toggle value=\"Placed\" (click)=\"getAllOrderDetailsForAdmin('Placed')\">Placed</mat-button-toggle>\r\n    <mat-button-toggle value=\"Delivered\" (click)=\"getAllOrderDetailsForAdmin('Delivered')\" >Delivered</mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 mt-3\">\r\n\r\n    <ng-container matColumnDef=\"Id\">\r\n      <th mat-header-cell *matHeaderCellDef> Id </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderId}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Product Name Column -->\r\n    <ng-container matColumnDef=\"Product Name\">\r\n      <th mat-header-cell *matHeaderCellDef> Product Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.product.productName}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.user.userFirstName}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Address Column -->\r\n    <ng-container matColumnDef=\"Address\">\r\n      <th mat-header-cell *matHeaderCellDef> Address </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderFullOrder}} </td>\r\n    </ng-container>\r\n\r\n     <!-- Contact No. Column -->\r\n     <ng-container matColumnDef=\"Contact No.\">\r\n        <th mat-header-cell *matHeaderCellDef> Contact No. </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderContactNumber}} </td>\r\n      </ng-container>\r\n\r\n       <!-- orderStatus Column -->\r\n     <ng-container matColumnDef=\"Status\">\r\n        <th mat-header-cell *matHeaderCellDef> Status </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderStatus}} </td>\r\n      </ng-container>\r\n\r\n       <!-- Action Column -->\r\n     <ng-container matColumnDef=\"Action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n          <button *ngIf=\"element.orderStatus == 'Placed'\" mat-raised-button color=\"primary\" (click)=\"markAsDelivered(element.orderId)\">Mark as Delivered</button>  \r\n      </td>\r\n    </ng-container>\r\n  \r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>  \r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'jwt-youtube-ui';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card text-center\" style=\"color: green; padding: 20px;\">\r\n        <h1>You are Admin</h1>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private userAuthService: UserAuthService,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this.userAuthService.getToken() !== null) {\r\n      const role = route.data['roles'] as Array<string>;\r\n\r\n      if (role) {\r\n        const match = this.userService.roleMatch(role);\r\n\r\n        if (match) {\r\n          return true;\r\n        } else {\r\n          this.router.navigate(['/forbidden']);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { UserAuthService } from './user-auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  //PATH_OF_API = 'http://localhost:5000';\r\n  PATH_OF_API= 'http://springbootapi-env.eba-asmcd5bv.us-east-1.elasticbeanstalk.com';\r\n\r\n  requestHeader = new HttpHeaders({ 'No-Auth': 'True' });\r\n  constructor(\r\n    private httpclient: HttpClient,\r\n    private userAuthService: UserAuthService\r\n  ) {}\r\n\r\n  public register(registerData) {\r\n    return this.httpclient.post(this.PATH_OF_API + '/registerNewUser', registerData);\r\n  }\r\n\r\n  public login(loginData) {\r\n    return this.httpclient.post(this.PATH_OF_API + '/authenticate', loginData, {\r\n      headers: this.requestHeader,\r\n    });\r\n  }\r\n\r\n  public forUser() {\r\n    return this.httpclient.get(this.PATH_OF_API + '/forUser', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n\r\n  public forAdmin() {\r\n    return this.httpclient.get(this.PATH_OF_API + '/forAdmin', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n  public roleMatch(allowedRoles): boolean {\r\n    let isMatch = false;\r\n    const userRoles: any = this.userAuthService.getRoles();\r\n\r\n    if (userRoles != null && userRoles) {\r\n      for (let i = 0; i < userRoles.length; i++) {\r\n        for (let j = 0; j < allowedRoles.length; j++) {\r\n          if (userRoles[i].roleName === allowedRoles[j]) {\r\n            isMatch = true;\r\n            return isMatch;\r\n          } else {\r\n            return isMatch;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './_auth/auth.guard';\r\nimport { AuthInterceptor } from './_auth/auth.interceptor';\r\nimport { UserService } from './_services/user.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { DragDirective } from './drag.directive';\r\nimport { ShowProductDetailsComponent } from './show-product-details/show-product-details.component';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { ShowProductImagesDialogComponent } from './show-product-images-dialog/show-product-images-dialog.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { ProductViewDetailsComponent } from './product-view-details/product-view-details.component';\r\nimport { BuyProductComponent } from './buy-product/buy-product.component';\r\nimport { OrderConfirmationComponent } from './order-confirmation/order-confirmation.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { MyOrdersComponent } from './my-orders/my-orders.component';\r\nimport { OrderDetailsComponent } from './order-details/order-details.component';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    AdminComponent,\r\n    UserComponent,\r\n    LoginComponent,\r\n    HeaderComponent,\r\n    ForbiddenComponent,\r\n    AddNewProductComponent,\r\n    DragDirective,\r\n    ShowProductDetailsComponent,\r\n    ShowProductImagesDialogComponent,\r\n    ProductViewDetailsComponent,\r\n    BuyProductComponent,\r\n    OrderConfirmationComponent,\r\n    RegisterComponent,\r\n    CartComponent,\r\n    MyOrdersComponent,\r\n    OrderDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatButtonToggleModule\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass:AuthInterceptor,\r\n      multi:true\r\n    },\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['Name', 'Description', 'Price', 'Discounted Price', 'Action'];\r\n\r\n  cartDetails: any[] = [];\r\n\r\n  constructor(private productService: ProductService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCartDetails();\r\n  }\r\n\r\n  delete(cartId) {\r\n    console.log(cartId);\r\n    this.productService.deleteCartItem(cartId).subscribe(\r\n      (resp) => {\r\n        console.log(resp);\r\n        this.getCartDetails();\r\n      }, (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  getCartDetails() {\r\n    this.productService.getCartDetails().subscribe(\r\n      (response:any[]) => {\r\n        console.log(response);\r\n        this.cartDetails = response;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  checkout() {\r\n    \r\n    this.router.navigate(['/buyProduct', {\r\n      isSingleProductCheckout: false, id: 0\r\n    }]);\r\n\r\n    // this.productService.getProductDetails(false, 0).subscribe(\r\n    //   (resp) => {\r\n    //     console.log(resp);\r\n    //   }, (err) => {\r\n    //     console.log(err);\r\n    //   }\r\n    // );\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div align=\"right\" class=\"mb-3\">\r\n        <button (click)=\"checkout()\" color=\"primary\" mat-raised-button>Checkout</button>\r\n    </div>\r\n    <table mat-table\r\n           [dataSource]=\"cartDetails\"\r\n           class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"Name\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Name </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.product.productName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Description\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Description </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.product.productDescription}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Price\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Price </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.product.productActualPrice}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Discounted Price\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Discounted Price </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.product.productDiscountedPrice}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Action\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Action </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> \r\n                <button mat-raised-button color=\"warn\" (click)=\"delete(element.cartId)\">Delete</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</div>","import { Directive, HostBinding, HostListener, Output } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { EventEmitter } from \"@angular/core\";\r\nimport { FileHandle } from \"./_model/file-handle.model\";\r\n\r\n@Directive({\r\n  selector: \"[appDrag]\",\r\n})\r\nexport class DragDirective {\r\n  @Output() files: EventEmitter<FileHandle> = new EventEmitter();\r\n\r\n  @HostBinding(\"style.background\") private background = \"#eee\";\r\n\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  @HostListener(\"dragover\", [\"$event\"])\r\n  public onDragOver(evt: DragEvent) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = \"#999\";\r\n  }\r\n\r\n  @HostListener(\"dragleave\", [\"$event\"])\r\n  public onDragLeave(evt: DragEvent) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = \"#eee\";\r\n  }\r\n\r\n  @HostListener(\"drop\", [\"$event\"])\r\n  public onDrop(evt: DragEvent) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = \"#eee\";\r\n\r\n    let fileHandle: FileHandle = null;\r\n\r\n    const file = evt.dataTransfer.files[0];\r\n    const url = this.sanitizer.bypassSecurityTrustUrl(\r\n      window.URL.createObjectURL(file)\r\n    );\r\n\r\n    fileHandle = { file, url };\r\n    this.files.emit(fileHandle);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(\r\n    private userAuthService: UserAuthService,\r\n    private router: Router,\r\n    public userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public isLoggedIn() {\r\n    return this.userAuthService.isLoggedIn();\r\n  }\r\n\r\n  public logout() {\r\n    this.userAuthService.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public isAdmin() {\r\n    return this.userAuthService.isAdmin();\r\n  }\r\n\r\n  public isUser() {\r\n    return this.userAuthService.isUser();\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <span>\r\n    E-Commerce Application\r\n  </span>\r\n\r\n  <span class=\"space-buttons\"></span>\r\n  <button *ngIf=\"! isLoggedIn()\" routerLink=\"/login\" mat-raised-button color=\"primary\">\r\n    Login\r\n  </button>\r\n  <button *ngIf=\"isLoggedIn()\" (click)=\"logout()\" mat-raised-button color=\"warn\">\r\n    Logout\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<mat-toolbar color=\"primary\" *ngIf=\"isLoggedIn()\">\r\n  <button mat-raised-button color=\"primary\" routerLink=\"/\">Home</button>\r\n  <button *ngIf=\"!isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/cart\">Cart</button>\r\n  <button *ngIf=\"!isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/myOrders\">My Orders</button>\r\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/addNewProduct\">Add New Product</button>\r\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/showProductDetails\">Show Product Details</button>\r\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/orderInformation\">Order Information</button>\r\n</mat-toolbar>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserAuthService {\r\n  constructor() {}\r\n\r\n  public setRoles(roles: []) {\r\n    localStorage.setItem('roles', JSON.stringify(roles));\r\n  }\r\n\r\n  public getRoles(): [] {\r\n    return JSON.parse(localStorage.getItem('roles'));\r\n  }\r\n\r\n  public setToken(jwtToken: string) {\r\n    localStorage.setItem('jwtToken', jwtToken);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem('jwtToken');\r\n  }\r\n\r\n  public clear() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  public isLoggedIn() {\r\n    return this.getRoles() && this.getToken();\r\n  }\r\n\r\n  public isAdmin() {\r\n    const roles: any[] = this.getRoles();\r\n    return roles[0].roleName === 'Admin';\r\n  }\r\n\r\n  public isUser() {\r\n    const roles: any[] = this.getRoles();\r\n    return roles[0].roleName === 'User';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-order-confirmation',\r\n  templateUrl: './order-confirmation.component.html',\r\n  styleUrls: ['./order-confirmation.component.css']\r\n})\r\nexport class OrderConfirmationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card p-5 text-center\">\r\n       <h1>Your order is place successfully. It will get delivered to you within 4-5 business days.</h1>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Product } from '../_model/product.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-product-view-details',\r\n  templateUrl: './product-view-details.component.html',\r\n  styleUrls: ['./product-view-details.component.css']\r\n})\r\nexport class ProductViewDetailsComponent implements OnInit {\r\n\r\n  selectedProductIndex = 0;\r\n\r\n  product: Product;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.product = this.activatedRoute.snapshot.data['product'];\r\n    console.log(this.product)\r\n  }\r\n\r\n  addToCart(productId) {\r\n    this.productService.addToCart(productId).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      }, (error)=> {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  changeIndex(index) {\r\n    this.selectedProductIndex = index;\r\n  }\r\n\r\n  buyProduct(productId) {\r\n    this.router.navigate(['/buyProduct', {\r\n      isSingleProductCheckout: true, id: productId\r\n    }]);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n\r\n            <div class=\"card image-container p-3\">\r\n                <img [src]=\"product.productImages[selectedProductIndex].url\" class=\"product-zoom-image\">\r\n            </div>\r\n\r\n            <div class=\"mt-2\">\r\n                <mat-grid-list cols=\"3\" gutterSize=\"10\" rowHeight=\"1:1\">\r\n                    <mat-grid-tile *ngFor=\"let file of product.productImages; let i = index;\" (click)=\"changeIndex(i)\" style=\"border: 1px solid lightgrey; cursor: pointer;\">\r\n                        <img [src]=\"file.url\" height=\"100px\" >\r\n                    </mat-grid-tile>\r\n                </mat-grid-list>\r\n            </div>\r\n           \r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"product-information\">\r\n                <div class=\"mt-3\">\r\n                    <h2>{{product.productName}}</h2>\r\n                </div>\r\n                <div class=\"mt-3\">\r\n                    Description: <br>\r\n                    {{product.productDescription}}\r\n                </div>\r\n                <div class=\"mt-3\">\r\n                    <b>Rs. {{product.productDiscountedPrice}}</b>&nbsp;&nbsp;<b style=\"text-decoration: line-through;\">{{product.productActualPrice}}</b>\r\n                </div>\r\n                <div class=\"mt-5 text-center\">\r\n                    <button mat-raised-button color=\"warn\" style=\"width: 200px;\" (click)=\"buyProduct(product.productId)\"> Buy Now</button>\r\n                    &nbsp;\r\n                    <button mat-raised-button style=\"width: 200px;\" (click)=\"addToCart(product.productId)\">Add to Cart</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forbidden',\r\n  templateUrl: './forbidden.component.html',\r\n  styleUrls: ['./forbidden.component.css']\r\n})\r\nexport class ForbiddenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card text-center\" style=\"padding:20px;\">\r\n        <h1>You are not allowed to access this page</h1>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MyOrderDetails } from '../_model/order.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-my-orders',\r\n  templateUrl: './my-orders.component.html',\r\n  styleUrls: ['./my-orders.component.css']\r\n})\r\nexport class MyOrdersComponent implements OnInit {\r\n\r\n  displayedColumns = [\"Name\", \"Address\", \"Contact No.\", \"Amount\", \"Status\"];\r\n\r\n  myOrderDetails: MyOrderDetails[] = [];\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getOrderDetails();\r\n  }\r\n\r\n  getOrderDetails() {\r\n    this.productService.getMyOrders().subscribe(\r\n      (resp: MyOrderDetails[]) => {\r\n        console.log(resp);\r\n        this.myOrderDetails = resp;\r\n      }, (err)=> {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <table mat-table\r\n           [dataSource]=\"myOrderDetails\"\r\n           class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"Name\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Name </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderFullName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Address\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Address </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderFullOrder}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Contact No.\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Contact No. </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderContactNumber}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Amount\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Amount </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderAmount}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Status\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Status </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderStatus}} </td>\r\n        </ng-container>\r\n\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderDetails } from '../_model/order-details.model';\r\nimport { MyOrderDetails } from '../_model/order.model';\r\nimport { Product } from '../_model/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n\r\n  //PATH_OF_API = 'http://localhost:5000';\r\n  PATH_OF_API= 'http://springbootapi-env.eba-asmcd5bv.us-east-1.elasticbeanstalk.com';\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public createTransaction(amount) {\r\n    return this.httpClient.get(this.PATH_OF_API+\"/createTransaction/\"+amount);\r\n  }\r\n\r\n  public markAsDelivered(orderId) {\r\n      return this.httpClient.get(this.PATH_OF_API+\"/markOrderAsDelivered/\"+orderId)\r\n  }\r\n\r\n  public getAllOrderDetailsForAdmin(status: string): Observable<MyOrderDetails[]> {\r\n    return this.httpClient.get<MyOrderDetails[]>(this.PATH_OF_API+\"/getAllOrderDetails/\"+status);\r\n  }\r\n\r\n  public getMyOrders(): Observable<MyOrderDetails[]> {\r\n    return this.httpClient.get<MyOrderDetails[]>(this.PATH_OF_API+\"/getOrderDetails\");\r\n  }\r\n\r\n  public deleteCartItem(cartId) {\r\n    return this.httpClient.delete(this.PATH_OF_API+\"/deleteCartItem/\"+cartId);\r\n  }\r\n\r\n  public addProduct(product: FormData) {\r\n    return this.httpClient.post<Product>(this.PATH_OF_API+\"/addNewProduct\", product);\r\n  }\r\n\r\n  public getAllProducts(pageNumber, searchKeyword: string = \"\") {\r\n    return this.httpClient.get<Product[]>(this.PATH_OF_API+\"/getAllProducts?pageNumber=\"+pageNumber+\"&searchKey=\"+searchKeyword);\r\n  }\r\n\r\n  public getProductDetailsById(productId) {\r\n    return this.httpClient.get<Product>(this.PATH_OF_API+\"/getProductDetailsById/\"+productId);\r\n  }\r\n\r\n  public deleteProduct(productId: number) {\r\n    return this.httpClient.delete(this.PATH_OF_API+\"/deleteProductDetails/\"+productId);\r\n  }\r\n\r\n  public getProductDetails(isSingleProductCheckout, productId) {\r\n    return this.httpClient.get<Product[]>(this.PATH_OF_API+\"/getProductDetails/\"+isSingleProductCheckout+\"/\"+productId);\r\n  }\r\n\r\n  public placeOrder(orderDetails: OrderDetails, isCartCheckout) {\r\n    return this.httpClient.post(this.PATH_OF_API+\"/placeOrder/\"+isCartCheckout, orderDetails);\r\n  }\r\n\r\n  public addToCart(productId) {\r\n    return this.httpClient.get(this.PATH_OF_API+\"/addToCart/\"+productId);\r\n  }\r\n\r\n  public getCartDetails() {\r\n    return this.httpClient.get(this.PATH_OF_API+\"/getCartDetails\");\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AddNewProductComponent } from \"./add-new-product/add-new-product.component\";\r\nimport { AdminComponent } from \"./admin/admin.component\";\r\nimport { BuyProductResolverService } from \"./buy-product-resolver.service\";\r\nimport { BuyProductComponent } from \"./buy-product/buy-product.component\";\r\nimport { CartComponent } from \"./cart/cart.component\";\r\nimport { ForbiddenComponent } from \"./forbidden/forbidden.component\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { MyOrdersComponent } from \"./my-orders/my-orders.component\";\r\nimport { OrderConfirmationComponent } from \"./order-confirmation/order-confirmation.component\";\r\nimport { OrderDetailsComponent } from \"./order-details/order-details.component\";\r\nimport { ProductResolveService } from \"./product-resolve.service\";\r\nimport { ProductViewDetailsComponent } from \"./product-view-details/product-view-details.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { ShowProductDetailsComponent } from \"./show-product-details/show-product-details.component\";\r\nimport { UserComponent } from \"./user/user.component\";\r\nimport { AuthGuard } from \"./_auth/auth.guard\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomeComponent },\r\n  {\r\n    path: \"admin\",\r\n    component: AdminComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"Admin\"] },\r\n  },\r\n  {\r\n    path: \"user\",\r\n    component: UserComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] },\r\n  },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"forbidden\", component: ForbiddenComponent },\r\n  {\r\n    path: \"addNewProduct\",\r\n    component: AddNewProductComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"Admin\"] },\r\n    resolve: {\r\n      product: ProductResolveService,\r\n    },\r\n  },\r\n  {\r\n    path: \"showProductDetails\",\r\n    component: ShowProductDetailsComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"Admin\"] },\r\n  },\r\n  {\r\n    path: \"orderInformation\",\r\n    component: OrderDetailsComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"Admin\"] },\r\n  },\r\n  {\r\n    path: \"productViewDetails\",\r\n    component: ProductViewDetailsComponent,\r\n    resolve: { product: ProductResolveService },\r\n  },\r\n  {\r\n    path: \"buyProduct\",\r\n    component: BuyProductComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] },\r\n    resolve: {\r\n      productDetails: BuyProductResolverService,\r\n    },\r\n  },\r\n  {\r\n    path: \"cart\",\r\n    component: CartComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] }\r\n  },\r\n  {\r\n    path:\"orderConfirm\",\r\n    component: OrderConfirmationComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] }\r\n  },\r\n  {\r\n    path:\"myOrders\",\r\n    component: MyOrdersComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] }\r\n  },\r\n  {\r\n    path: \"register\",\r\n    component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(\r\n    private userService: UserService,\r\n    private userAuthService: UserAuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login(loginForm: NgForm) {\r\n    this.userService.login(loginForm.value).subscribe(\r\n      (response: any) => {\r\n        this.userAuthService.setRoles(response.user.role);\r\n        this.userAuthService.setToken(response.jwtToken);\r\n\r\n        const role = response.user.role[0].roleName;\r\n        if (role === 'Admin') {\r\n          this.router.navigate(['/admin']);\r\n        } else {\r\n          this.router.navigate(['/user']);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  registerUser() {\r\n    this.router.navigate(['/register']);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card\" style=\"padding: 20px;\">\r\n        <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Username</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userName\"\r\n                       id=\"userName\"\r\n                       placeholder=\"Username\">\r\n                <mat-hint>Username</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Password</mat-label>\r\n                <input type=\"password\"\r\n                    matInput\r\n                       ngModel\r\n                       name=\"userPassword\"\r\n                       id=\"userPassword\"\r\n                       placeholder=\"Password\">\r\n                <mat-hint>Password</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <button class=\"w-100\" type=\"submit\" mat-raised-button color=\"primary\">Login</button>\r\n        </form>\r\n\r\n        \r\n    </div>\r\n    <div class=\"text-center\">\r\n        <br>\r\n        <button class=\"w-20\" mat-raised-button type=\"button\" (click)=\"registerUser()\">Create an account</button>\r\n    </div>\r\n        \r\n</div>","import { Injectable } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FileHandle } from './_model/file-handle.model';\r\nimport { Product } from './_model/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageProcessingService {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  public createImages(product: Product) {\r\n    const productImages: any[] = product.productImages;\r\n\r\n    const productImagesToFileHandle: FileHandle[] = [];\r\n\r\n    for (let i = 0; i < productImages.length; i++) {\r\n      const imageFileData = productImages[i];\r\n\r\n      const imageBlob = this.dataURItoBlob(imageFileData.picByte, imageFileData.type);\r\n\r\n      const imageFile = new File([imageBlob], imageFileData.name, { type: imageFileData.type });\r\n\r\n      const finalFileHandle :FileHandle = {\r\n        file: imageFile,\r\n        url: this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(imageFile))\r\n      };\r\n\r\n      productImagesToFileHandle.push(finalFileHandle);\r\n    }\r\n\r\n    product.productImages = productImagesToFileHandle;\r\n    return product;\r\n\r\n  }\r\n\r\n  public dataURItoBlob(picBytes, imageType) {\r\n    const byteString = window.atob(picBytes);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n\r\n    for(let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n\r\n    const blob = new Blob([int8Array], { type: imageType});\r\n    return blob;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import {\r\n    HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private userAuthService: UserAuthService,\r\n    private router:Router) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (req.headers.get('No-Auth') === 'True') {\r\n      return next.handle(req.clone());\r\n    }\r\n\r\n    const token = this.userAuthService.getToken();\r\n\r\n    if(token) {\r\n      req = this.addToken(req, token);\r\n    }\r\n    \r\n    return next.handle(req).pipe(\r\n        catchError(\r\n            (err:HttpErrorResponse) => {\r\n                console.log(err.status);\r\n                if(err.status === 401) {\r\n                    this.router.navigate(['/login']);\r\n                } else if(err.status === 403) {\r\n                    this.router.navigate(['/forbidden']);\r\n                }\r\n                return throwError(\"Some thing is wrong\");\r\n            }\r\n        )\r\n    );\r\n  }\r\n\r\n\r\n  private addToken(request:HttpRequest<any>, token:string) {\r\n      return request.clone(\r\n          {\r\n              setHeaders: {\r\n                  Authorization : `Bearer ${token}`\r\n              }\r\n          }\r\n      );\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}