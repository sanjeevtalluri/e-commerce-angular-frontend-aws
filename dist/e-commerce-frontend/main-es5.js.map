{"version":3,"sources":["webpack:///src/app/buy-product/buy-product.component.ts","webpack:///src/app/buy-product/buy-product.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/buy-product-resolver.service.ts","webpack:///src/app/show-product-images-dialog/show-product-images-dialog.component.ts","webpack:///src/app/show-product-images-dialog/show-product-images-dialog.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/product-resolve.service.ts","webpack:///src/app/show-product-details/show-product-details.component.ts","webpack:///src/app/show-product-details/show-product-details.component.html","webpack:///src/app/add-new-product/add-new-product.component.ts","webpack:///src/app/add-new-product/add-new-product.component.html","webpack:///src/app/order-details/order-details.component.ts","webpack:///src/app/order-details/order-details.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/_auth/auth.guard.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/drag.directive.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/_services/user-auth.service.ts","webpack:///src/app/order-confirmation/order-confirmation.component.ts","webpack:///src/app/order-confirmation/order-confirmation.component.html","webpack:///src/app/product-view-details/product-view-details.component.ts","webpack:///src/app/product-view-details/product-view-details.component.html","webpack:///src/app/forbidden/forbidden.component.ts","webpack:///src/app/forbidden/forbidden.component.html","webpack:///src/app/my-orders/my-orders.component.ts","webpack:///src/app/my-orders/my-orders.component.html","webpack:///src/app/_services/product.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/image-processing.service.ts","webpack:///src/main.ts","webpack:///src/app/_auth/auth.interceptor.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["BuyProductComponent","activatedRoute","productService","router","injector","isSingleProductCheckout","productDetails","orderDetails","fullName","fullAddress","contactNumber","alternateContactNumber","transactionId","orderProductQuantityList","snapshot","data","paramMap","get","forEach","x","push","productId","quantity","console","log","orderForm","placeOrder","subscribe","resp","reset","ngZone","run","navigate","err","filteredProduct","filter","productQuantity","productDiscountedPrice","q","orderProduct","grandTotal","price","product","amount","getCalculatedGrandTotal","createTransaction","response","openTransactioModal","error","options","order_id","orderId","key","currency","name","description","image","handler","razorpay_payment_id","processResponse","alert","prefill","email","contact","notes","address","theme","color","razorPayObject","Razorpay","open","createTransactionAndPlaceOrder","selector","templateUrl","styleUrls","RegisterComponent","userService","registerForm","value","register","UserComponent","forUser","message","BuyProductResolverService","productServcice","imageProcessingService","route","state","id","getProductDetails","pipe","i","map","createImages","providedIn","ShowProductImagesDialogComponent","receiveImages","HomeComponent","pageNumber","showLoadButton","getAllProducts","searchkeyword","searchKey","length","p","searchByKeyword","environment","production","ProductResolveService","getProductDetailsById","productName","productDescription","productActualPrice","productImages","ShowProductDetailsComponent","imagesDialog","showLoadMoreProductButton","showTable","displayedColumns","searchKeyword","deleteProduct","images","height","width","AddNewProductComponent","sanitizer","isNewProduct","productForm","formData","prepareFormDataForProduct","addProduct","uploadImageData","FormData","append","Blob","JSON","stringify","type","file","event","target","files","fileHandle","url","bypassSecurityTrustUrl","window","URL","createObjectURL","splice","fileDropped","onFileSelected","OrderDetailsComponent","dataSource","status","getAllOrderDetailsForAdmin","statusParameter","markAsDelivered","AppComponent","title","AdminComponent","AuthGuard","userAuthService","getToken","role","match","roleMatch","UserService","httpclient","PATH_OF_API","requestHeader","registerData","post","loginData","headers","responseType","allowedRoles","isMatch","userRoles","getRoles","j","roleName","AppModule","provide","useClass","multi","declarations","imports","providers","bootstrap","CartComponent","cartDetails","getCartDetails","cartId","deleteCartItem","checkout","DragDirective","background","evt","preventDefault","stopPropagation","dataTransfer","emit","onDragOver","onDragLeave","onDrop","HeaderComponent","isLoggedIn","clear","isAdmin","isUser","UserAuthService","roles","localStorage","setItem","parse","getItem","jwtToken","OrderConfirmationComponent","ProductViewDetailsComponent","selectedProductIndex","addToCart","index","buyProduct","ForbiddenComponent","MyOrdersComponent","myOrderDetails","getOrderDetails","getMyOrders","ProductService","httpClient","isCartCheckout","routes","path","component","canActivate","resolve","AppRoutingModule","forRoot","exports","LoginComponent","loginForm","login","setRoles","user","setToken","registerUser","ImageProcessingService","productImagesToFileHandle","imageFileData","imageBlob","dataURItoBlob","picByte","imageFile","File","finalFileHandle","picBytes","imageType","byteString","atob","arrayBuffer","ArrayBuffer","int8Array","Uint8Array","charCodeAt","blob","bootstrapModule","AuthInterceptor","req","next","handle","clone","token","addToken","request","setHeaders","Authorization","webpackEmptyAsyncContext","Promise","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, Injector, NgZone, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n// import * as Razorpay from 'razorpay';\r\nimport { OrderDetails } from '../_model/order-details.model';\r\nimport { Product } from '../_model/product.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\ndeclare var Razorpay: any;\r\n@Component({\r\n  selector: 'app-buy-product',\r\n  templateUrl: './buy-product.component.html',\r\n  styleUrls: ['./buy-product.component.css']\r\n})\r\nexport class BuyProductComponent implements OnInit {\r\n\r\n  isSingleProductCheckout: string = '';\r\n  productDetails: Product[] = [] ;\r\n\r\n  orderDetails: OrderDetails = {\r\n    fullName: '',\r\n    fullAddress: '',\r\n    contactNumber: '',\r\n    alternateContactNumber: '',\r\n    transactionId: '',\r\n    orderProductQuantityList: []\r\n  }\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n    private productService: ProductService,\r\n    private router: Router,\r\n    private injector: Injector) { }\r\n\r\n  ngOnInit(): void {\r\n    this.productDetails = this.activatedRoute.snapshot.data['productDetails'];\r\n    this.isSingleProductCheckout = this.activatedRoute.snapshot.paramMap.get(\"isSingleProductCheckout\");\r\n    \r\n    this.productDetails.forEach(\r\n      x => this.orderDetails.orderProductQuantityList.push(\r\n        {productId: x.productId, quantity: 1}\r\n      )\r\n    );\r\n\r\n    console.log(this.productDetails)\r\n    console.log(this.orderDetails);\r\n  }\r\n\r\n  public placeOrder(orderForm: NgForm) {\r\n    this.productService.placeOrder(this.orderDetails, this.isSingleProductCheckout).subscribe(\r\n      (resp) => {\r\n        console.log(resp);\r\n        orderForm.reset();\r\n\r\n        const ngZone = this.injector.get(NgZone);\r\n        ngZone.run(\r\n          () => {\r\n            this.router.navigate([\"/orderConfirm\"]);\r\n          }\r\n        );\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getQuantityForProduct(productId) {\r\n    const filteredProduct = this.orderDetails.orderProductQuantityList.filter(\r\n      (productQuantity) => productQuantity.productId === productId\r\n    );\r\n\r\n    return filteredProduct[0].quantity;\r\n  }\r\n\r\n  getCalculatedTotal(productId, productDiscountedPrice) {\r\n    const filteredProduct = this.orderDetails.orderProductQuantityList.filter(\r\n      (productQuantity) => productQuantity.productId === productId\r\n    );\r\n\r\n    return filteredProduct[0].quantity * productDiscountedPrice;\r\n  }\r\n\r\n  onQuantityChanged(q, productId) {\r\n    this.orderDetails.orderProductQuantityList.filter(\r\n      (orderProduct) => orderProduct.productId === productId\r\n    )[0].quantity = q;\r\n  }\r\n\r\n  getCalculatedGrandTotal() {\r\n    let grandTotal = 0;\r\n\r\n    this.orderDetails.orderProductQuantityList.forEach(\r\n      (productQuantity) => {\r\n        const price = this.productDetails.filter(product => product.productId === productQuantity.productId)[0].productDiscountedPrice;\r\n        grandTotal = grandTotal + price * productQuantity.quantity;\r\n      }\r\n    );\r\n\r\n    return grandTotal;\r\n  }\r\n\r\n  createTransactionAndPlaceOrder(orderForm: NgForm) {\r\n    let amount = this.getCalculatedGrandTotal();\r\n    this.productService.createTransaction(amount).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.openTransactioModal(response, orderForm);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  openTransactioModal(response: any, orderForm: NgForm) {\r\n    var options = {\r\n      order_id: response.orderId,\r\n      key: response.key,\r\n      amount: response.amount,\r\n      currency: response.currency,\r\n      name: 'Learn programming yourself',\r\n      description: 'Payment of online shopping',\r\n      image: 'https://cdn.pixabay.com/photo/2023/01/22/13/46/swans-7736415_640.jpg',\r\n      handler: (response: any) => {\r\n        if(response!= null && response.razorpay_payment_id != null) {\r\n          this.processResponse(response, orderForm);\r\n        } else {\r\n          alert(\"Payment failed..\")\r\n        }\r\n       \r\n      },\r\n      prefill : {\r\n        name:'LPY',\r\n        email: 'LPY@GMAIL.COM',\r\n        contact: '90909090'\r\n      },\r\n      notes: {\r\n        address: 'Online Shopping'\r\n      },\r\n      theme: {\r\n        color: '#F37254'\r\n      }\r\n    };\r\n\r\n    var razorPayObject = new Razorpay(options);\r\n    razorPayObject.open();\r\n  }\r\n\r\n  processResponse(resp: any, orderForm:NgForm) {\r\n    this.orderDetails.transactionId = resp.razorpay_payment_id;\r\n    this.placeOrder(orderForm);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card p-3\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6\">\r\n\r\n                <form #orderForm=\"ngForm\"\r\n                      (ngSubmit)=\"createTransactionAndPlaceOrder(orderForm)\">\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Full name</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Full name\"\r\n                               [(ngModel)]=\"orderDetails.fullName\"\r\n                               name=\"fullName\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Full address</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Full address\"\r\n                               [(ngModel)]=\"orderDetails.fullAddress\"\r\n                               name=\"fullAddress\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Contact number</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Contact number\"\r\n                               [(ngModel)]=\"orderDetails.contactNumber\"\r\n                               name=\"contactNumber\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Alternate contact number</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Alternate contact number\"\r\n                               [(ngModel)]=\"orderDetails.alternateContactNumber\"\r\n                               name=\"alternateContactNumber\">\r\n                    </mat-form-field>\r\n\r\n                    <div align=\"right\">\r\n                        <button type=\"submit\" mat-stroked-button color=\"primary\">Place Order</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead\">\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Amount</th>\r\n                            <th>Quantity</th>\r\n                            <th>Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody class=\"tbody\">\r\n                        <tr *ngFor=\"let product of productDetails\">\r\n                            <td>{{product.productName}}</td>\r\n                            <td>{{product.productDiscountedPrice}}</td>\r\n                            <td>\r\n                                <select \r\n                                #quantity\r\n                                class=\"form-select\"\r\n                                [ngModel]=\"getQuantityForProduct(product.productId)\"\r\n                                (change)=\"onQuantityChanged(quantity.value, product.productId)\"\r\n                                >\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                {{getCalculatedTotal(product.productId, product.productDiscountedPrice)}}\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td>Total</td>\r\n                            <td> {{getCalculatedGrandTotal()}} </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register(registerForm: NgForm) {\r\n    console.log(registerForm.value);\r\n    this.userService.register(registerForm.value).subscribe(\r\n      (response) => {\r\n        this.router.navigate(['/login']);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card\" style=\"padding: 20px;\">\r\n        <form #registerForm=\"ngForm\" (ngSubmit)=\"register(registerForm)\">\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Username</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userName\"\r\n                       id=\"userName\"\r\n                       placeholder=\"Username\">\r\n                <mat-hint>Username</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Firstname</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userFirstName\"\r\n                       id=\"userFirstName\"\r\n                       placeholder=\"Firstname\">\r\n                <mat-hint>Firstname</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Lastname</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userLastName\"\r\n                       id=\"userLastName\"\r\n                       placeholder=\"Lastname\">\r\n                <mat-hint>Lastname</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Password</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userPassword\"\r\n                       id=\"userPassword\"\r\n                       placeholder=\"Password\">\r\n                <mat-hint>Password</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <div class=\"text-center\">\r\n                <button type=\"submit\" mat-raised-button color=\"primary\">Register</button>\r\n            </div>\r\n            \r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  message;\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forUser();\r\n  }\r\n\r\n  forUser() {\r\n    this.userService.forUser().subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        this.message = response;\r\n      }, \r\n      (error)=>{\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card text-center\" style=\"padding: 20px; color: red;\">\r\n        <h1>You are User</h1>\r\n        <h1>{{message}}</h1>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImageProcessingService } from './image-processing.service';\r\nimport { Product } from './_model/product.model';\r\nimport { ProductService } from './_services/product.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BuyProductResolverService implements Resolve<Product[]>{\r\n\r\n  // let isSingleProductCheckout = false;\r\n\r\n  constructor(private productServcice: ProductService,\r\n    private imageProcessingService: ImageProcessingService) { \r\n\r\n    }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Product[] | Observable<Product[]> | Promise<Product[]> {\r\n    \r\n    const id = route.paramMap.get(\"id\");\r\n    const isSingleProductCheckout = route.paramMap.get(\"isSingleProductCheckout\");\r\n    return this.productServcice.getProductDetails(isSingleProductCheckout, id)\r\n      .pipe(\r\n        map(\r\n          (x: Product[], i) => x.map((product: Product) => this.imageProcessingService.createImages(product))\r\n        )\r\n      );\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { FileHandle } from '../_model/file-handle.model';\r\n\r\n@Component({\r\n  selector: 'app-show-product-images-dialog',\r\n  templateUrl: './show-product-images-dialog.component.html',\r\n  styleUrls: ['./show-product-images-dialog.component.css']\r\n})\r\nexport class ShowProductImagesDialogComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.receiveImages();\r\n  }\r\n\r\n  receiveImages() {\r\n    console.log(this.data);\r\n  }\r\n\r\n}\r\n","<mat-grid-list cols=\"4\" rowHeight=\"1:1\">\r\n    <mat-grid-tile *ngFor=\"let fileHandle of data.images\">\r\n        <img [src]=\"fileHandle.url\" width=\"150px\" height=\"150px\">\r\n    </mat-grid-tile>\r\n</mat-grid-list>","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImageProcessingService } from '../image-processing.service';\r\nimport { Product } from '../_model/product.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  pageNumber: number = 0;\r\n\r\n  productDetails = [];\r\n\r\n  showLoadButton = false;\r\n\r\n  constructor(private productService: ProductService,\r\n    private imageProcessingService: ImageProcessingService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllProducts();\r\n  }\r\n\r\n  searchByKeyword(searchkeyword) {\r\n    console.log(searchkeyword);\r\n    this.pageNumber = 0;\r\n    this.productDetails = [];\r\n    this.getAllProducts(searchkeyword);\r\n  }\r\n\r\n  public getAllProducts(searchKey: string = \"\") {\r\n    this.productService.getAllProducts(this.pageNumber, searchKey)\r\n    .pipe(\r\n      map((x: Product[], i) => x.map((product: Product) => this.imageProcessingService.createImages(product)))\r\n    )\r\n    .subscribe(\r\n      (resp: Product[]) => {\r\n        console.log(resp);\r\n        if(resp.length == 12) {\r\n          this.showLoadButton = true;\r\n        } else {\r\n          this.showLoadButton = false;\r\n        }\r\n        resp.forEach(p => this.productDetails.push(p));\r\n      }, (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public loadMoreProduct() {\r\n    this.pageNumber = this.pageNumber + 1;\r\n    this.getAllProducts();\r\n  }\r\n\r\n  showProductDetails(productId) {\r\n    this.router.navigate(['/productViewDetails', {productId: productId}]);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n\r\n   <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n      <mat-label>Search any product</mat-label>\r\n      <input matInput\r\n             #searchkeyword\r\n             (keyup)=\"searchByKeyword(searchkeyword.value)\"\r\n             name=\"searchKey\"\r\n             id=\"searchKey\"\r\n             placeholder=\"Search any product\">\r\n      <mat-hint>Search any product</mat-hint>\r\n  </mat-form-field>\r\n\r\n   <mat-grid-list cols=\"4\" rowHeight=\"3:5\" gutterSize=\"10\">\r\n      <mat-grid-tile *ngFor=\"let p of productDetails\">\r\n         <div class=\"row p-5\">\r\n            <div class=\"image-container\">\r\n               <img class=\"home-page-product-image\" [src]=\"p.productImages[0].url\" alt=\"\">\r\n            </div>\r\n            <div class=\"mt-3\">\r\n               <p><b>{{p.productName}}</b></p>\r\n            </div>\r\n            <div class=\"mt-2\">\r\n               <p style=\"white-space: inherit; height: 40px; width: 288px; overflow: hidden; text-overflow: ellipsis;\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos sed eaque molestias iste repudiandae in quos distinctio rem excepturi expedita incidunt, doloremque id sequi perferendis ipsum. Maxime ad iste eius.</p>\r\n            </div>\r\n            <div class=\"mt-2\">\r\n              <b>Rs. {{p.productDiscountedPrice}}</b> &nbsp;  <b style=\"text-decoration: line-through;\">{{p.productActualPrice}}</b>\r\n            </div>\r\n            <div class=\"mt-2\">\r\n               <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"showProductDetails(p.productId)\">View Details</button>\r\n            </div>\r\n         </div>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <div class=\"text-center mt-5\" style=\"padding-bottom: 100px;\" *ngIf=\"showLoadButton\">\r\n      <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"loadMoreProduct()\"> Load more</button>\r\n    </div>\r\n\r\n    <div class=\"mt-5\" >\r\n         \r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Product } from './_model/product.model';\r\nimport { ProductService } from './_services/product.service';\r\nimport { ImageProcessingService } from './image-processing.service'\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ProductResolveService implements Resolve<Product> {\r\n  constructor(private productService: ProductService,\r\n    private imageProcessingService: ImageProcessingService) {}\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<Product> {\r\n    const id = route.paramMap.get(\"productId\");\r\n\r\n    if (id) {\r\n      //then we have to fetch details from backend\r\n       return this.productService.getProductDetailsById(id)\r\n              .pipe(\r\n                map(p => this.imageProcessingService.createImages(p))\r\n              );\r\n    } else {\r\n      // return empty product observable.\r\n      return of(this.getProductDetails());\r\n    }\r\n  }\r\n\r\n  getProductDetails() {\r\n    return {\r\n      productId:null,\r\n      productName: \"\",\r\n      productDescription: \"\",\r\n      productDiscountedPrice: 0,\r\n      productActualPrice: 0,\r\n      productImages: [],\r\n    };\r\n  }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { ImageProcessingService } from '../image-processing.service';\r\nimport { ShowProductImagesDialogComponent } from '../show-product-images-dialog/show-product-images-dialog.component';\r\nimport { Product } from '../_model/product.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-show-product-details',\r\n  templateUrl: './show-product-details.component.html',\r\n  styleUrls: ['./show-product-details.component.css']\r\n})\r\nexport class ShowProductDetailsComponent implements OnInit {\r\n\r\n  showLoadMoreProductButton = false;\r\n  showTable = false;\r\n  pageNumber: number = 0;\r\n  productDetails: Product[] = [];\r\n  displayedColumns: string[] = ['Id', 'Product Name', 'description', 'Product Discounted Price', 'Product Actual Price', 'Actions'];\r\n\r\n  constructor(private productService: ProductService,\r\n    public imagesDialog: MatDialog,\r\n    private imageProcessingService: ImageProcessingService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllProducts();\r\n  }\r\n\r\n  searchByKeyword(searchkeyword) {\r\n    console.log(searchkeyword);\r\n    this.pageNumber = 0;\r\n    this.productDetails = [];\r\n    this.getAllProducts(searchkeyword);\r\n  }\r\n\r\n  public getAllProducts(searchKeyword: string = \"\") {\r\n    this.showTable = false;\r\n    this.productService.getAllProducts(this.pageNumber, searchKeyword)\r\n    .pipe(\r\n      map((x: Product[], i) => x.map((product: Product) => this.imageProcessingService.createImages(product)))\r\n    )\r\n    .subscribe(\r\n      (resp: Product[]) => {\r\n        // console.log(resp);\r\n        resp.forEach(product => this.productDetails.push(product));\r\n        console.log('msg', this.productDetails);\r\n        this.showTable = true;\r\n\r\n        if(resp.length == 12) {\r\n          this.showLoadMoreProductButton = true;\r\n        } else {\r\n          this.showLoadMoreProductButton = false;\r\n        }\r\n\r\n        // this.productDetails = resp;\r\n      }, (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  loadMoreProduct() {\r\n    this.pageNumber = this.pageNumber + 1;\r\n    this.getAllProducts();\r\n  }\r\n\r\n  deleteProduct(productId) {\r\n    this.productService.deleteProduct(productId).subscribe(\r\n      (resp) => {\r\n        this.getAllProducts();\r\n      },\r\n      (error:HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  showImages(product: Product) {\r\n    console.log(product);\r\n    this.imagesDialog.open(ShowProductImagesDialogComponent, {\r\n      data: {\r\n        images: product.productImages\r\n      },\r\n      height: '500px',\r\n      width: '800px'\r\n    });\r\n  }\r\n\r\n  editProductDetails(productId) {\r\n    this.router.navigate(['/addNewProduct', {productId: productId}]);\r\n  }\r\n}\r\n","<div class=\"mt-5 p-3\">\r\n\r\n  <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n    <mat-label>Search any product</mat-label>\r\n    <input matInput\r\n           #searchkeyword\r\n           (keyup)=\"searchByKeyword(searchkeyword.value)\"\r\n           name=\"searchKey\"\r\n           id=\"searchKey\"\r\n           placeholder=\"Search any product\">\r\n    <mat-hint>Search any product</mat-hint>\r\n</mat-form-field>\r\n \r\n<div *ngIf=\"showTable\">\r\n\r\n\r\n<table mat-table [dataSource]=\"productDetails\" class=\"mat-elevation-z8\">\r\n  \r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"Id\">\r\n      <th mat-header-cell *matHeaderCellDef> Id </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.productId}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Product Name\">\r\n      <th mat-header-cell *matHeaderCellDef> Product Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.productName}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Weight Column -->\r\n    <ng-container matColumnDef=\"description\">\r\n      <th mat-header-cell *matHeaderCellDef> Product Description </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.productDescription}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Symbol Column -->\r\n    <ng-container matColumnDef=\"Product Discounted Price\">\r\n      <th mat-header-cell *matHeaderCellDef> Product Discounted Price </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.productDiscountedPrice}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Product Actual Price\">\r\n        <th mat-header-cell *matHeaderCellDef> Product Actual Price </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.productActualPrice}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Actions\">\r\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n        <button mat-icon-button color=\"primary\" (click)=\"showImages(element)\">\r\n          <mat-icon> images </mat-icon>\r\n        </button>    \r\n        <button mat-icon-button color=\"primary\" (click)=\"editProductDetails(element.productId)\">\r\n          <mat-icon> edit </mat-icon>\r\n        </button>\r\n        <button mat-icon-button color=\"warn\" (click)=\"deleteProduct(element.productId)\">\r\n          <mat-icon> delete </mat-icon>\r\n        </button> \r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n</div>\r\n\r\n<div class=\"text-center p-5\" *ngIf=\"showLoadMoreProductButton\">\r\n  <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"loadMoreProduct()\">Load more</button>\r\n</div>\r\n\r\n</div>\r\n","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { FileHandle } from \"../_model/file-handle.model\";\r\nimport { Product } from \"../_model/product.model\";\r\nimport { ProductService } from \"../_services/product.service\";\r\n\r\n@Component({\r\n  selector: \"app-add-new-product\",\r\n  templateUrl: \"./add-new-product.component.html\",\r\n  styleUrls: [\"./add-new-product.component.css\"],\r\n})\r\nexport class AddNewProductComponent implements OnInit {\r\n  isNewProduct = true;\r\n\r\n  product: Product = {\r\n    productId: null,\r\n    productName: \"\",\r\n    productDescription: \"\",\r\n    productDiscountedPrice: 0,\r\n    productActualPrice: 0,\r\n    productImages: [],\r\n  };\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private sanitizer: DomSanitizer,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.product = this.activatedRoute.snapshot.data['product'];\r\n\r\n    if(this.product && this.product.productId) {\r\n      this.isNewProduct = false;\r\n    }\r\n  }\r\n\r\n  addProduct(productForm: NgForm) {\r\n    const formData = this.prepareFormDataForProduct(this.product);\r\n    this.productService.addProduct(formData).subscribe(\r\n      (response: Product) => {\r\n        productForm.reset();\r\n        this.product.productImages = [];\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  prepareFormDataForProduct(product: Product): FormData {\r\n    const uploadImageData = new FormData();\r\n    uploadImageData.append(\r\n      \"product\",\r\n      new Blob([JSON.stringify(product)], { type: \"application/json\" })\r\n    );\r\n\r\n    for (var i = 0; i < this.product.productImages.length; i++) {\r\n      uploadImageData.append(\r\n        \"imageFile\",\r\n        this.product.productImages[i].file,\r\n        this.product.productImages[i].file.name\r\n      );\r\n    }\r\n    return uploadImageData;\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    if (event.target.files) {\r\n      const file = event.target.files[0];\r\n      const fileHandle: FileHandle = {\r\n        file: file,\r\n        url: this.sanitizer.bypassSecurityTrustUrl(\r\n          window.URL.createObjectURL(file)\r\n        ),\r\n      };\r\n      this.product.productImages.push(fileHandle);\r\n    }\r\n  }\r\n\r\n  removeImages(i: number) {\r\n    this.product.productImages.splice(i, 1);\r\n  }\r\n\r\n  fileDropped(fileHandle: FileHandle) {\r\n    this.product.productImages.push(fileHandle);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card p-2\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-6\">\r\n\r\n                <form #productForm=\"ngForm\"\r\n                      (ngSubmit)=\"addProduct(productForm)\">\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Product Name</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Product Name\"\r\n                               [(ngModel)]=\"product.productName\"\r\n                               name=\"productName\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Product Description</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Product Description\"\r\n                               [(ngModel)]=\"product.productDescription\"\r\n                               name=\"productDescription\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Product Actual Price</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Product Actual Price\"\r\n                               [(ngModel)]=\"product.productActualPrice\"\r\n                               name=\"productActualPrice\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"outline\"\r\n                                    class=\"w-100\">\r\n                        <mat-label>Product Discounted Price</mat-label>\r\n                        <input matInput\r\n                               placeholder=\"Product Discounted Price\"\r\n                               [(ngModel)]=\"product.productDiscountedPrice\"\r\n                               name=\"productDiscountedPrice\">\r\n                    </mat-form-field>\r\n\r\n                    <div align=\"end\">\r\n                        <button mat-stroked-button\r\n                                color=\"primary\"\r\n                                style=\"margin-right: 3px;\">Clear</button>\r\n                        <button type=\"submit\" *ngIf=\"isNewProduct\"\r\n                                mat-stroked-button\r\n                                color=\"primary\">Add Product</button>\r\n                        <button type=\"submit\" *ngIf=\"!isNewProduct\"\r\n                                mat-stroked-button\r\n                                color=\"primary\">Update Product</button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div>\r\n                    <div class=\"dropzone\"\r\n                         appDrag\r\n                         (files)=\"fileDropped($event)\">\r\n                        <div class=\"text-wrapper\">\r\n                            <div class=\"centered\">\r\n                                Drag and drop your file or\r\n                                <a (click)=\"selectFile.click()\"\r\n                                   class=\"browse-button\">browse</a>\r\n                                a file\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <input multiple\r\n                           type=\"file\"\r\n                           style=\"display: none;\"\r\n                           #selectFile\r\n                           value=\"select\"\r\n                           (change)=\"onFileSelected($event)\">\r\n                </div>\r\n                <div class=\"mt-5\">\r\n                    <div class=\"row\">\r\n                        <mat-grid-list cols=\"4\"\r\n                                       rowHeight=\"1:1\">\r\n                            <mat-grid-tile *ngFor=\"let file of product.productImages; let i = index;\">\r\n                                <div style=\"position: relative\">\r\n                                    <span class=\"btn-remove-image\"\r\n                                          (click)=\"removeImages(i)\">x</span>\r\n                                    <img [src]=\"file.url\"\r\n                                         width=\"100px\"\r\n                                         height=\"100px\">\r\n                                </div>\r\n                            </mat-grid-tile>\r\n                        </mat-grid-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-order-details',\r\n  templateUrl: './order-details.component.html',\r\n  styleUrls: ['./order-details.component.css']\r\n})\r\nexport class OrderDetailsComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['Id', 'Product Name', 'Name', 'Address', 'Contact No.', 'Status', 'Action'];\r\n  dataSource = [];\r\n\r\n  status: string = 'All';\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllOrderDetailsForAdmin(this.status);\r\n  }\r\n\r\n  getAllOrderDetailsForAdmin(statusParameter: string) {\r\n    this.productService.getAllOrderDetailsForAdmin(statusParameter).subscribe(\r\n      (resp) => {\r\n        this.dataSource = resp;\r\n        console.log(resp);\r\n      }, (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  markAsDelivered(orderId) {\r\n    console.log(orderId);\r\n    this.productService.markAsDelivered(orderId).subscribe(\r\n      (response) => {\r\n        this.getAllOrderDetailsForAdmin(this.status);\r\n        console.log(response);\r\n      }, (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n  <mat-button-toggle-group  aria-label=\"Font Style\">\r\n    <mat-button-toggle value=\"All\" (click)=\"getAllOrderDetailsForAdmin('All')\">All</mat-button-toggle>\r\n    <mat-button-toggle value=\"Placed\" (click)=\"getAllOrderDetailsForAdmin('Placed')\">Placed</mat-button-toggle>\r\n    <mat-button-toggle value=\"Delivered\" (click)=\"getAllOrderDetailsForAdmin('Delivered')\" >Delivered</mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n\r\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 mt-3\">\r\n\r\n    <ng-container matColumnDef=\"Id\">\r\n      <th mat-header-cell *matHeaderCellDef> Id </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderId}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Product Name Column -->\r\n    <ng-container matColumnDef=\"Product Name\">\r\n      <th mat-header-cell *matHeaderCellDef> Product Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.product.productName}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"Name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.user.userFirstName}} </td>\r\n    </ng-container>\r\n  \r\n    <!-- Address Column -->\r\n    <ng-container matColumnDef=\"Address\">\r\n      <th mat-header-cell *matHeaderCellDef> Address </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderFullOrder}} </td>\r\n    </ng-container>\r\n\r\n     <!-- Contact No. Column -->\r\n     <ng-container matColumnDef=\"Contact No.\">\r\n        <th mat-header-cell *matHeaderCellDef> Contact No. </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderContactNumber}} </td>\r\n      </ng-container>\r\n\r\n       <!-- orderStatus Column -->\r\n     <ng-container matColumnDef=\"Status\">\r\n        <th mat-header-cell *matHeaderCellDef> Status </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderStatus}} </td>\r\n      </ng-container>\r\n\r\n       <!-- Action Column -->\r\n     <ng-container matColumnDef=\"Action\">\r\n      <th mat-header-cell *matHeaderCellDef> Action </th>\r\n      <td mat-cell *matCellDef=\"let element\"> \r\n          <button *ngIf=\"element.orderStatus == 'Placed'\" mat-raised-button color=\"primary\" (click)=\"markAsDelivered(element.orderId)\">Mark as Delivered</button>  \r\n      </td>\r\n    </ng-container>\r\n  \r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>  \r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'jwt-youtube-ui';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card text-center\" style=\"color: green; padding: 20px;\">\r\n        <h1>You are Admin</h1>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private userAuthService: UserAuthService,\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this.userAuthService.getToken() !== null) {\r\n      const role = route.data['roles'] as Array<string>;\r\n\r\n      if (role) {\r\n        const match = this.userService.roleMatch(role);\r\n\r\n        if (match) {\r\n          return true;\r\n        } else {\r\n          this.router.navigate(['/forbidden']);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { UserAuthService } from './user-auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  //PATH_OF_API = 'http://localhost:5000';\r\n  PATH_OF_API= 'http://springbootapi-env.eba-asmcd5bv.us-east-1.elasticbeanstalk.com';\r\n\r\n  requestHeader = new HttpHeaders({ 'No-Auth': 'True' });\r\n  constructor(\r\n    private httpclient: HttpClient,\r\n    private userAuthService: UserAuthService\r\n  ) {}\r\n\r\n  public register(registerData) {\r\n    return this.httpclient.post(this.PATH_OF_API + '/registerNewUser', registerData);\r\n  }\r\n\r\n  public login(loginData) {\r\n    return this.httpclient.post(this.PATH_OF_API + '/authenticate', loginData, {\r\n      headers: this.requestHeader,\r\n    });\r\n  }\r\n\r\n  public forUser() {\r\n    return this.httpclient.get(this.PATH_OF_API + '/forUser', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n\r\n  public forAdmin() {\r\n    return this.httpclient.get(this.PATH_OF_API + '/forAdmin', {\r\n      responseType: 'text',\r\n    });\r\n  }\r\n\r\n  public roleMatch(allowedRoles): boolean {\r\n    let isMatch = false;\r\n    const userRoles: any = this.userAuthService.getRoles();\r\n\r\n    if (userRoles != null && userRoles) {\r\n      for (let i = 0; i < userRoles.length; i++) {\r\n        for (let j = 0; j < allowedRoles.length; j++) {\r\n          if (userRoles[i].roleName === allowedRoles[j]) {\r\n            isMatch = true;\r\n            return isMatch;\r\n          } else {\r\n            return isMatch;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './_auth/auth.guard';\r\nimport { AuthInterceptor } from './_auth/auth.interceptor';\r\nimport { UserService } from './_services/user.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { DragDirective } from './drag.directive';\r\nimport { ShowProductDetailsComponent } from './show-product-details/show-product-details.component';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { ShowProductImagesDialogComponent } from './show-product-images-dialog/show-product-images-dialog.component';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport { ProductViewDetailsComponent } from './product-view-details/product-view-details.component';\r\nimport { BuyProductComponent } from './buy-product/buy-product.component';\r\nimport { OrderConfirmationComponent } from './order-confirmation/order-confirmation.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { CartComponent } from './cart/cart.component';\r\nimport { MyOrdersComponent } from './my-orders/my-orders.component';\r\nimport { OrderDetailsComponent } from './order-details/order-details.component';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    AdminComponent,\r\n    UserComponent,\r\n    LoginComponent,\r\n    HeaderComponent,\r\n    ForbiddenComponent,\r\n    AddNewProductComponent,\r\n    DragDirective,\r\n    ShowProductDetailsComponent,\r\n    ShowProductImagesDialogComponent,\r\n    ProductViewDetailsComponent,\r\n    BuyProductComponent,\r\n    OrderConfirmationComponent,\r\n    RegisterComponent,\r\n    CartComponent,\r\n    MyOrdersComponent,\r\n    OrderDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatButtonToggleModule\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass:AuthInterceptor,\r\n      multi:true\r\n    },\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['Name', 'Description', 'Price', 'Discounted Price', 'Action'];\r\n\r\n  cartDetails: any[] = [];\r\n\r\n  constructor(private productService: ProductService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCartDetails();\r\n  }\r\n\r\n  delete(cartId) {\r\n    console.log(cartId);\r\n    this.productService.deleteCartItem(cartId).subscribe(\r\n      (resp) => {\r\n        console.log(resp);\r\n        this.getCartDetails();\r\n      }, (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  getCartDetails() {\r\n    this.productService.getCartDetails().subscribe(\r\n      (response:any[]) => {\r\n        console.log(response);\r\n        this.cartDetails = response;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  checkout() {\r\n    \r\n    this.router.navigate(['/buyProduct', {\r\n      isSingleProductCheckout: false, id: 0\r\n    }]);\r\n\r\n    // this.productService.getProductDetails(false, 0).subscribe(\r\n    //   (resp) => {\r\n    //     console.log(resp);\r\n    //   }, (err) => {\r\n    //     console.log(err);\r\n    //   }\r\n    // );\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div align=\"right\" class=\"mb-3\">\r\n        <button (click)=\"checkout()\" color=\"primary\" mat-raised-button>Checkout</button>\r\n    </div>\r\n    <table mat-table\r\n           [dataSource]=\"cartDetails\"\r\n           class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"Name\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Name </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.product.productName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Description\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Description </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.product.productDescription}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Price\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Price </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.product.productActualPrice}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Discounted Price\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Discounted Price </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.product.productDiscountedPrice}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Action\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Action </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> \r\n                <button mat-raised-button color=\"warn\" (click)=\"delete(element.cartId)\">Delete</button>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</div>","import { Directive, HostBinding, HostListener, Output } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { EventEmitter } from \"@angular/core\";\r\nimport { FileHandle } from \"./_model/file-handle.model\";\r\n\r\n@Directive({\r\n  selector: \"[appDrag]\",\r\n})\r\nexport class DragDirective {\r\n  @Output() files: EventEmitter<FileHandle> = new EventEmitter();\r\n\r\n  @HostBinding(\"style.background\") private background = \"#eee\";\r\n\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  @HostListener(\"dragover\", [\"$event\"])\r\n  public onDragOver(evt: DragEvent) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = \"#999\";\r\n  }\r\n\r\n  @HostListener(\"dragleave\", [\"$event\"])\r\n  public onDragLeave(evt: DragEvent) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = \"#eee\";\r\n  }\r\n\r\n  @HostListener(\"drop\", [\"$event\"])\r\n  public onDrop(evt: DragEvent) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = \"#eee\";\r\n\r\n    let fileHandle: FileHandle = null;\r\n\r\n    const file = evt.dataTransfer.files[0];\r\n    const url = this.sanitizer.bypassSecurityTrustUrl(\r\n      window.URL.createObjectURL(file)\r\n    );\r\n\r\n    fileHandle = { file, url };\r\n    this.files.emit(fileHandle);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(\r\n    private userAuthService: UserAuthService,\r\n    private router: Router,\r\n    public userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public isLoggedIn() {\r\n    return this.userAuthService.isLoggedIn();\r\n  }\r\n\r\n  public logout() {\r\n    this.userAuthService.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public isAdmin() {\r\n    return this.userAuthService.isAdmin();\r\n  }\r\n\r\n  public isUser() {\r\n    return this.userAuthService.isUser();\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <span>\r\n    E-Commerce Application\r\n  </span>\r\n\r\n  <span class=\"space-buttons\"></span>\r\n  <button *ngIf=\"! isLoggedIn()\" routerLink=\"/login\" mat-raised-button color=\"primary\">\r\n    Login\r\n  </button>\r\n  <button *ngIf=\"isLoggedIn()\" (click)=\"logout()\" mat-raised-button color=\"warn\">\r\n    Logout\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<mat-toolbar color=\"primary\" *ngIf=\"isLoggedIn()\">\r\n  <button mat-raised-button color=\"primary\" routerLink=\"/\">Home</button>\r\n  <button *ngIf=\"!isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/cart\">Cart</button>\r\n  <button *ngIf=\"!isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/myOrders\">My Orders</button>\r\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/addNewProduct\">Add New Product</button>\r\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/showProductDetails\">Show Product Details</button>\r\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/orderInformation\">Order Information</button>\r\n</mat-toolbar>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserAuthService {\r\n  constructor() {}\r\n\r\n  public setRoles(roles: []) {\r\n    localStorage.setItem('roles', JSON.stringify(roles));\r\n  }\r\n\r\n  public getRoles(): [] {\r\n    return JSON.parse(localStorage.getItem('roles'));\r\n  }\r\n\r\n  public setToken(jwtToken: string) {\r\n    localStorage.setItem('jwtToken', jwtToken);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem('jwtToken');\r\n  }\r\n\r\n  public clear() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  public isLoggedIn() {\r\n    return this.getRoles() && this.getToken();\r\n  }\r\n\r\n  public isAdmin() {\r\n    const roles: any[] = this.getRoles();\r\n    return roles[0].roleName === 'Admin';\r\n  }\r\n\r\n  public isUser() {\r\n    const roles: any[] = this.getRoles();\r\n    return roles[0].roleName === 'User';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-order-confirmation',\r\n  templateUrl: './order-confirmation.component.html',\r\n  styleUrls: ['./order-confirmation.component.css']\r\n})\r\nexport class OrderConfirmationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card p-5 text-center\">\r\n       <h1>Your order is place successfully. It will get delivered to you within 4-5 business days.</h1>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Product } from '../_model/product.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-product-view-details',\r\n  templateUrl: './product-view-details.component.html',\r\n  styleUrls: ['./product-view-details.component.css']\r\n})\r\nexport class ProductViewDetailsComponent implements OnInit {\r\n\r\n  selectedProductIndex = 0;\r\n\r\n  product: Product;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.product = this.activatedRoute.snapshot.data['product'];\r\n    console.log(this.product)\r\n  }\r\n\r\n  addToCart(productId) {\r\n    this.productService.addToCart(productId).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      }, (error)=> {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  changeIndex(index) {\r\n    this.selectedProductIndex = index;\r\n  }\r\n\r\n  buyProduct(productId) {\r\n    this.router.navigate(['/buyProduct', {\r\n      isSingleProductCheckout: true, id: productId\r\n    }]);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-6\">\r\n\r\n            <div class=\"card image-container p-3\">\r\n                <img [src]=\"product.productImages[selectedProductIndex].url\" class=\"product-zoom-image\">\r\n            </div>\r\n\r\n            <div class=\"mt-2\">\r\n                <mat-grid-list cols=\"3\" gutterSize=\"10\" rowHeight=\"1:1\">\r\n                    <mat-grid-tile *ngFor=\"let file of product.productImages; let i = index;\" (click)=\"changeIndex(i)\" style=\"border: 1px solid lightgrey; cursor: pointer;\">\r\n                        <img [src]=\"file.url\" height=\"100px\" >\r\n                    </mat-grid-tile>\r\n                </mat-grid-list>\r\n            </div>\r\n           \r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"product-information\">\r\n                <div class=\"mt-3\">\r\n                    <h2>{{product.productName}}</h2>\r\n                </div>\r\n                <div class=\"mt-3\">\r\n                    Description: <br>\r\n                    {{product.productDescription}}\r\n                </div>\r\n                <div class=\"mt-3\">\r\n                    <b>Rs. {{product.productDiscountedPrice}}</b>&nbsp;&nbsp;<b style=\"text-decoration: line-through;\">{{product.productActualPrice}}</b>\r\n                </div>\r\n                <div class=\"mt-5 text-center\">\r\n                    <button mat-raised-button color=\"warn\" style=\"width: 200px;\" (click)=\"buyProduct(product.productId)\"> Buy Now</button>\r\n                    &nbsp;\r\n                    <button mat-raised-button style=\"width: 200px;\" (click)=\"addToCart(product.productId)\">Add to Cart</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forbidden',\r\n  templateUrl: './forbidden.component.html',\r\n  styleUrls: ['./forbidden.component.css']\r\n})\r\nexport class ForbiddenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card text-center\" style=\"padding:20px;\">\r\n        <h1>You are not allowed to access this page</h1>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MyOrderDetails } from '../_model/order.model';\r\nimport { ProductService } from '../_services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-my-orders',\r\n  templateUrl: './my-orders.component.html',\r\n  styleUrls: ['./my-orders.component.css']\r\n})\r\nexport class MyOrdersComponent implements OnInit {\r\n\r\n  displayedColumns = [\"Name\", \"Address\", \"Contact No.\", \"Amount\", \"Status\"];\r\n\r\n  myOrderDetails: MyOrderDetails[] = [];\r\n\r\n  constructor(private productService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getOrderDetails();\r\n  }\r\n\r\n  getOrderDetails() {\r\n    this.productService.getMyOrders().subscribe(\r\n      (resp: MyOrderDetails[]) => {\r\n        console.log(resp);\r\n        this.myOrderDetails = resp;\r\n      }, (err)=> {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n    <table mat-table\r\n           [dataSource]=\"myOrderDetails\"\r\n           class=\"mat-elevation-z8\">\r\n\r\n        <ng-container matColumnDef=\"Name\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Name </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderFullName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Address\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Address </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderFullOrder}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Contact No.\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Contact No. </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderContactNumber}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Amount\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Amount </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderAmount}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Status\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> Status </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let element\"> {{element.orderStatus}} </td>\r\n        </ng-container>\r\n\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { OrderDetails } from '../_model/order-details.model';\r\nimport { MyOrderDetails } from '../_model/order.model';\r\nimport { Product } from '../_model/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n\r\n  //PATH_OF_API = 'http://localhost:5000';\r\n  PATH_OF_API= 'http://springbootapi-env.eba-asmcd5bv.us-east-1.elasticbeanstalk.com';\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public createTransaction(amount) {\r\n    return this.httpClient.get(this.PATH_OF_API+\"/createTransaction/\"+amount);\r\n  }\r\n\r\n  public markAsDelivered(orderId) {\r\n      return this.httpClient.get(this.PATH_OF_API+\"/markOrderAsDelivered/\"+orderId)\r\n  }\r\n\r\n  public getAllOrderDetailsForAdmin(status: string): Observable<MyOrderDetails[]> {\r\n    return this.httpClient.get<MyOrderDetails[]>(this.PATH_OF_API+\"/getAllOrderDetails/\"+status);\r\n  }\r\n\r\n  public getMyOrders(): Observable<MyOrderDetails[]> {\r\n    return this.httpClient.get<MyOrderDetails[]>(this.PATH_OF_API+\"/getOrderDetails\");\r\n  }\r\n\r\n  public deleteCartItem(cartId) {\r\n    return this.httpClient.delete(this.PATH_OF_API+\"/deleteCartItem/\"+cartId);\r\n  }\r\n\r\n  public addProduct(product: FormData) {\r\n    return this.httpClient.post<Product>(this.PATH_OF_API+\"/addNewProduct\", product);\r\n  }\r\n\r\n  public getAllProducts(pageNumber, searchKeyword: string = \"\") {\r\n    return this.httpClient.get<Product[]>(this.PATH_OF_API+\"/getAllProducts?pageNumber=\"+pageNumber+\"&searchKey=\"+searchKeyword);\r\n  }\r\n\r\n  public getProductDetailsById(productId) {\r\n    return this.httpClient.get<Product>(this.PATH_OF_API+\"/getProductDetailsById/\"+productId);\r\n  }\r\n\r\n  public deleteProduct(productId: number) {\r\n    return this.httpClient.delete(this.PATH_OF_API+\"/deleteProductDetails/\"+productId);\r\n  }\r\n\r\n  public getProductDetails(isSingleProductCheckout, productId) {\r\n    return this.httpClient.get<Product[]>(this.PATH_OF_API+\"/getProductDetails/\"+isSingleProductCheckout+\"/\"+productId);\r\n  }\r\n\r\n  public placeOrder(orderDetails: OrderDetails, isCartCheckout) {\r\n    return this.httpClient.post(this.PATH_OF_API+\"/placeOrder/\"+isCartCheckout, orderDetails);\r\n  }\r\n\r\n  public addToCart(productId) {\r\n    return this.httpClient.get(this.PATH_OF_API+\"/addToCart/\"+productId);\r\n  }\r\n\r\n  public getCartDetails() {\r\n    return this.httpClient.get(this.PATH_OF_API+\"/getCartDetails\");\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AddNewProductComponent } from \"./add-new-product/add-new-product.component\";\r\nimport { AdminComponent } from \"./admin/admin.component\";\r\nimport { BuyProductResolverService } from \"./buy-product-resolver.service\";\r\nimport { BuyProductComponent } from \"./buy-product/buy-product.component\";\r\nimport { CartComponent } from \"./cart/cart.component\";\r\nimport { ForbiddenComponent } from \"./forbidden/forbidden.component\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { MyOrdersComponent } from \"./my-orders/my-orders.component\";\r\nimport { OrderConfirmationComponent } from \"./order-confirmation/order-confirmation.component\";\r\nimport { OrderDetailsComponent } from \"./order-details/order-details.component\";\r\nimport { ProductResolveService } from \"./product-resolve.service\";\r\nimport { ProductViewDetailsComponent } from \"./product-view-details/product-view-details.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { ShowProductDetailsComponent } from \"./show-product-details/show-product-details.component\";\r\nimport { UserComponent } from \"./user/user.component\";\r\nimport { AuthGuard } from \"./_auth/auth.guard\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomeComponent },\r\n  {\r\n    path: \"admin\",\r\n    component: AdminComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"Admin\"] },\r\n  },\r\n  {\r\n    path: \"user\",\r\n    component: UserComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] },\r\n  },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"forbidden\", component: ForbiddenComponent },\r\n  {\r\n    path: \"addNewProduct\",\r\n    component: AddNewProductComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"Admin\"] },\r\n    resolve: {\r\n      product: ProductResolveService,\r\n    },\r\n  },\r\n  {\r\n    path: \"showProductDetails\",\r\n    component: ShowProductDetailsComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"Admin\"] },\r\n  },\r\n  {\r\n    path: \"orderInformation\",\r\n    component: OrderDetailsComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"Admin\"] },\r\n  },\r\n  {\r\n    path: \"productViewDetails\",\r\n    component: ProductViewDetailsComponent,\r\n    resolve: { product: ProductResolveService },\r\n  },\r\n  {\r\n    path: \"buyProduct\",\r\n    component: BuyProductComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] },\r\n    resolve: {\r\n      productDetails: BuyProductResolverService,\r\n    },\r\n  },\r\n  {\r\n    path: \"cart\",\r\n    component: CartComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] }\r\n  },\r\n  {\r\n    path:\"orderConfirm\",\r\n    component: OrderConfirmationComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] }\r\n  },\r\n  {\r\n    path:\"myOrders\",\r\n    component: MyOrdersComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { roles: [\"User\"] }\r\n  },\r\n  {\r\n    path: \"register\",\r\n    component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(\r\n    private userService: UserService,\r\n    private userAuthService: UserAuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login(loginForm: NgForm) {\r\n    this.userService.login(loginForm.value).subscribe(\r\n      (response: any) => {\r\n        this.userAuthService.setRoles(response.user.role);\r\n        this.userAuthService.setToken(response.jwtToken);\r\n\r\n        const role = response.user.role[0].roleName;\r\n        if (role === 'Admin') {\r\n          this.router.navigate(['/admin']);\r\n        } else {\r\n          this.router.navigate(['/user']);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  registerUser() {\r\n    this.router.navigate(['/register']);\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div class=\"card\" style=\"padding: 20px;\">\r\n        <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Username</mat-label>\r\n                <input matInput\r\n                       ngModel\r\n                       name=\"userName\"\r\n                       id=\"userName\"\r\n                       placeholder=\"Username\">\r\n                <mat-hint>Username</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-label>Password</mat-label>\r\n                <input type=\"password\"\r\n                    matInput\r\n                       ngModel\r\n                       name=\"userPassword\"\r\n                       id=\"userPassword\"\r\n                       placeholder=\"Password\">\r\n                <mat-hint>Password</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <button class=\"w-100\" type=\"submit\" mat-raised-button color=\"primary\">Login</button>\r\n        </form>\r\n\r\n        \r\n    </div>\r\n    <div class=\"text-center\">\r\n        <br>\r\n        <button class=\"w-20\" mat-raised-button type=\"button\" (click)=\"registerUser()\">Create an account</button>\r\n    </div>\r\n        \r\n</div>","import { Injectable } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FileHandle } from './_model/file-handle.model';\r\nimport { Product } from './_model/product.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageProcessingService {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n\r\n  public createImages(product: Product) {\r\n    const productImages: any[] = product.productImages;\r\n\r\n    const productImagesToFileHandle: FileHandle[] = [];\r\n\r\n    for (let i = 0; i < productImages.length; i++) {\r\n      const imageFileData = productImages[i];\r\n\r\n      const imageBlob = this.dataURItoBlob(imageFileData.picByte, imageFileData.type);\r\n\r\n      const imageFile = new File([imageBlob], imageFileData.name, { type: imageFileData.type });\r\n\r\n      const finalFileHandle :FileHandle = {\r\n        file: imageFile,\r\n        url: this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(imageFile))\r\n      };\r\n\r\n      productImagesToFileHandle.push(finalFileHandle);\r\n    }\r\n\r\n    product.productImages = productImagesToFileHandle;\r\n    return product;\r\n\r\n  }\r\n\r\n  public dataURItoBlob(picBytes, imageType) {\r\n    const byteString = window.atob(picBytes);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n\r\n    for(let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n\r\n    const blob = new Blob([int8Array], { type: imageType});\r\n    return blob;\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import {\r\n    HttpErrorResponse,\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { UserAuthService } from '../_services/user-auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private userAuthService: UserAuthService,\r\n    private router:Router) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (req.headers.get('No-Auth') === 'True') {\r\n      return next.handle(req.clone());\r\n    }\r\n\r\n    const token = this.userAuthService.getToken();\r\n\r\n    if(token) {\r\n      req = this.addToken(req, token);\r\n    }\r\n    \r\n    return next.handle(req).pipe(\r\n        catchError(\r\n            (err:HttpErrorResponse) => {\r\n                console.log(err.status);\r\n                if(err.status === 401) {\r\n                    this.router.navigate(['/login']);\r\n                } else if(err.status === 403) {\r\n                    this.router.navigate(['/forbidden']);\r\n                }\r\n                return throwError(\"Some thing is wrong\");\r\n            }\r\n        )\r\n    );\r\n  }\r\n\r\n\r\n  private addToken(request:HttpRequest<any>, token:string) {\r\n      return request.clone(\r\n          {\r\n              setHeaders: {\r\n                  Authorization : `Bearer ${token}`\r\n              }\r\n          }\r\n      );\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}